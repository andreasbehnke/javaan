        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
        [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
       [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
       [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
      [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
      [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
      [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
      [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
      [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
      [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
      [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
      [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.JavaanCli.main(java.lang.String[])
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
     [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
     [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
     [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
     [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
     [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
     [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
     [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
     [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
     [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
     [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
     [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
     [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
     [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
     [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
     [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
     [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
    [M]org.javaan.JavaanCli.execute()
    [M]org.javaan.JavaanCli.main(java.lang.String[])
    [M]org.javaan.JavaanCli.main(java.lang.String[])
    [M]org.javaan.JavaanCli.main(java.lang.String[])
    [M]org.javaan.JavaanCli.main(java.lang.String[])
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
    [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
    [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
    [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
    [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
    [M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
    [M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
    [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
    [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
    [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
    [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
    [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
    [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
    [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
    [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
    [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
    [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
    [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
    [M]org.javaan.commands.ShowPackageUsedGraph.<init>()
    [M]org.javaan.commands.ShowPackageUsingGraph.<init>()
    [M]org.javaan.commands.ShowUsedGraph.<init>()
    [M]org.javaan.commands.ShowUsingGraph.<init>()
    [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
    [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
    [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
    [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
    [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
    [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
    [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
    [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
    [M]org.javaan.model.ClassContext.<init>()
    [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
    [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
    [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz)
    [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface)
    [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
    [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
    [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
    [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
    [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
    [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
    [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
   [M]org.javaan.JavaanCli.execute()
   [M]org.javaan.JavaanCli.execute()
   [M]org.javaan.JavaanCli.execute()
   [M]org.javaan.JavaanCli.getCommands()
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.main(java.lang.String[])
   [M]org.javaan.JavaanCli.printUsage(boolean)
   [M]org.javaan.JavaanCli.printUsage(boolean)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
   [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
   [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.build()
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
   [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
   [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
   [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
   [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
   [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
   [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
   [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
   [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$2(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
   [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
   [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
   [M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
   [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
   [M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseClassDependencyGraphCommand.<init>()
   [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
   [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
   [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
   [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
   [M]org.javaan.commands.BasePackageDependencyGraphCommand.<init>()
   [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListClasses.printClasses(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListInterfaces.printInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
   [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
   [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
   [M]org.javaan.commands.ShowCalleeGraph.<init>()
   [M]org.javaan.commands.ShowCalleeGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
   [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.commands.ShowCallerGraph.<init>()
   [M]org.javaan.commands.ShowCallerGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
   [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
   [M]org.javaan.commands.ShowPackageUsedGraph.<init>()
   [M]org.javaan.commands.ShowPackageUsingGraph.<init>()
   [M]org.javaan.commands.ShowUsedGraph.<init>()
   [M]org.javaan.commands.ShowUsingGraph.<init>()
   [M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean)
   [M]org.javaan.graph.GraphFactory.createVertexEdgeTree(java.util.function.Supplier)
   [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
   [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
   [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
   [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
   [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
   [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
   [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
   [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
   [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
   [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
   [M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
   [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
   [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
   [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
   [M]org.javaan.model.ClassContext.<init>()
   [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type)
   [M]org.javaan.model.ClassContext.getSpecializationOfInterface(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.getSpecializationsOfClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getSuperClass(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getSuperClassHierarchy(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getSuperInterfaces(org.javaan.model.Interface)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
   [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz)
   [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface)
   [M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
   [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
   [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
   [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
   [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
   [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
   [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
   [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
   [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
   [M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
   [M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
   [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
   [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
   [M]org.javaan.model.NamedObjectMap.<init>(java.util.Collection)
   [M]org.javaan.model.Type.create(java.lang.String)
   [M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String)
  [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
  [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
  [M]org.javaan.JavaanCli.createIndent()
  [M]org.javaan.JavaanCli.createIndent()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.execute()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.getCommands()
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.main(java.lang.String[])
  [M]org.javaan.JavaanCli.printUsage(boolean)
  [M]org.javaan.JavaanCli.printUsage(boolean)
  [M]org.javaan.JavaanCli.printUsage(boolean)
  [M]org.javaan.JavaanCli.printUsage(boolean)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
  [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
  [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.build()
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$1(org.javaan.model.Method)
  [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$1(org.javaan.model.Method)
  [M]org.javaan.bytecode.CallGraphBuilder.processClasses()
  [M]org.javaan.bytecode.ClassContextBuilder.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz,org.javaan.graph.Tree)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
  [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz)
  [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz)
  [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz)
  [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$2(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
  [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$4(org.javaan.model.Interface)
  [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
  [M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
  [M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
  [M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
  [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
  [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Constructor)
  [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Method)
  [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.classfile.Method)
  [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
  [M]org.javaan.commands.BaseCallGraphCommand.<init>()
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
  [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
  [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
  [M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
  [M]org.javaan.commands.BaseClassDependencyGraphCommand.<init>()
  [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
  [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
  [M]org.javaan.commands.BaseClassDependencyGraphCommand.getTypeFormatter()
  [M]org.javaan.commands.BaseClassDependencyGraphCommand.getTypeFormatter()
  [M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[])
  [M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[])
  [M]org.javaan.commands.BaseDependencyGraphCommand.<init>()
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
  [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
  [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
  [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
  [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
  [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
  [M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
  [M]org.javaan.commands.BasePackageDependencyGraphCommand.<init>()
  [M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle()
  [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
  [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
  [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
  [M]org.javaan.commands.ListClasses.<init>()
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListClasses.printClasses(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
  [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
  [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
  [M]org.javaan.commands.ListInterfaces.<init>()
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListInterfaces.printInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
  [M]org.javaan.commands.ListMissingTypes.<init>()
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.<init>()
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
  [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
  [M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
  [M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
  [M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
  [M]org.javaan.commands.NameMatcher.accept(java.lang.Object)
  [M]org.javaan.commands.ResetOptions.<init>()
  [M]org.javaan.commands.SetOptions.<init>()
  [M]org.javaan.commands.ShowCalleeGraph.<init>()
  [M]org.javaan.commands.ShowCalleeGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
  [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
  [M]org.javaan.commands.ShowCallerGraph.<init>()
  [M]org.javaan.commands.ShowCallerGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
  [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.<init>()
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.<init>()
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
  [M]org.javaan.commands.ShowPackageUsedGraph.<init>()
  [M]org.javaan.commands.ShowPackageUsingGraph.<init>()
  [M]org.javaan.commands.ShowUsedGraph.<init>()
  [M]org.javaan.commands.ShowUsingGraph.<init>()
  [M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean)
  [M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean)
  [M]org.javaan.graph.ExtendedGraph.predecessorsOf(java.lang.Object)
  [M]org.javaan.graph.ExtendedGraph.successorsOf(java.lang.Object)
  [M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
  [M]org.javaan.graph.GraphFactory$1.getEdgeWeight(java.lang.Object)
  [M]org.javaan.graph.GraphFactory.createDependencyGraph()
  [M]org.javaan.graph.GraphFactory.createSubgraphView(org.javaan.graph.ExtendedGraph,java.util.Set,boolean)
  [M]org.javaan.graph.GraphFactory.createVertexEdgeGraph(java.util.function.Supplier)
  [M]org.javaan.graph.GraphFactory.createVertexEdgeTree(java.util.function.Supplier)
  [M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles()
  [M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles()
  [M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoints()
  [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String)
  [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String,java.lang.String)
  [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
  [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
  [M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String[])
  [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
  [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
  [M]org.javaan.graph.TopologicalMultiGraphSort.getTargetVerticesSortedByDegree(java.lang.Object)
  [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
  [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
  [M]org.javaan.graph.Tree.<init>(org.jgrapht.Graph)
  [M]org.javaan.graph.Tree.predecessorPathOf(java.lang.Object)
  [M]org.javaan.graph.Tree.sourceVertexOf(java.lang.Object)
  [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object)
  [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object)
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.jgraphx.MxGraphBuilder.build()
  [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.getCallee(org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.getCallers(org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.getDependencyCycles()
  [M]org.javaan.model.CallGraph.getLeafCallee(org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.getLeafCallers(org.javaan.model.Method)
  [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsedTypes(org.javaan.model.Type)
  [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getLeafUsingTypes(org.javaan.model.Type)
  [M]org.javaan.model.CallGraph.getPackageDependencyCycles()
  [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
  [M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
  [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
  [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
  [M]org.javaan.model.ClassContext.<init>()
  [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
  [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
  [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
  [M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getDirectSpecializationsOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String)
  [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String)
  [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String)
  [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String)
  [M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type)
  [M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type)
  [M]org.javaan.model.ClassContext.getSpecializationOfInterface(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.getSpecializationsOfClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getSuperClass(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getSuperClassHierarchy(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getSuperInterfaces(org.javaan.model.Interface)
  [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
  [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
  [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
  [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
  [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
  [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz)
  [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface)
  [M]org.javaan.model.Clazz.<init>(java.lang.Class)
  [M]org.javaan.model.Clazz.<init>(java.lang.String)
  [M]org.javaan.model.Clazz.<init>(java.lang.String,java.lang.String,java.util.List)
  [M]org.javaan.model.Clazz.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
  [M]org.javaan.model.Dependency.<init>(org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
  [M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
  [M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
  [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
  [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
  [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
  [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
  [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
  [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
  [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
  [M]org.javaan.model.Interface.<init>(java.lang.Class)
  [M]org.javaan.model.Interface.<init>(java.lang.String)
  [M]org.javaan.model.Interface.<init>(java.lang.String,java.util.List)
  [M]org.javaan.model.Interface.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
  [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
  [M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
  [M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
  [M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List,org.apache.bcel.classfile.Method)
  [M]org.javaan.model.Method.<init>(org.javaan.model.Type,java.lang.String)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
  [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
  [M]org.javaan.model.NamedObjectBase.compareTo(java.lang.Object)
  [M]org.javaan.model.NamedObjectMap.<init>(java.util.Collection)
  [M]org.javaan.model.NamedObjectMap.addAll(java.util.Collection)
  [M]org.javaan.model.Package.<init>(org.javaan.model.Type)
  [M]org.javaan.model.Type.create(java.lang.String)
  [M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String)
  [M]org.javaan.print.ClazzFormatter.format(java.lang.Object)
  [M]org.javaan.print.ConsoleDependencyFormatter.format(java.lang.Object)
  [M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
  [M]org.javaan.print.GraphPrinter.visitEdge(java.lang.Object,int)
  [M]org.javaan.print.GraphPrinter.visitVertex(java.lang.Object,int)
  [M]org.javaan.print.InterfaceFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodListDependencyFormatter.format(java.lang.Object)
  [M]org.javaan.print.MethodListDependencyFormatter.format(java.lang.Object)
  [M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(java.lang.Object)
  [M]org.javaan.print.PackageFormatter.format(java.lang.Object)
  [M]org.javaan.print.PrintUtil.println(java.io.Writer,java.util.Collection,java.lang.String,java.lang.String,java.lang.String)
  [M]org.javaan.print.TypeFormatter.format(java.lang.Object)
  [M]org.javaan.print.TypeFormatter.format(java.lang.Object)
  [M]org.javaan.print.TypeFormatter.format(java.lang.Object)
  [M]org.javaan.print.TypeFormatter.format(java.lang.Object)
  [M]org.javaan.print.TypeInformationFormatter.format(java.lang.Object)
  [M]org.javaan.print.TypeInformationFormatter.format(java.lang.Object)
  [M]org.javaan.print.VertexEdgeGraphPrinter.visitVertex(java.lang.Object,int)
 [M]org.javaan.CommandContext$AdditionalTypeInformation.<clinit>()
 [M]org.javaan.CommandContext.isDisplay2dGraph()
 [M]org.javaan.CommandContext.isResolveDependenciesInClassHierarchy()
 [M]org.javaan.CommandContext.isResolveMethodImplementations()
 [M]org.javaan.CommandMap.getCommand(java.lang.String)
 [M]org.javaan.Graph2dDisplay$2.windowClosing(java.awt.event.WindowEvent)
 [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
 [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
 [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
 [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
 [M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
 [M]org.javaan.JavaanCli.createIndent()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.execute()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.getCommands()
 [M]org.javaan.JavaanCli.main(java.lang.String[])
 [M]org.javaan.JavaanCli.main(java.lang.String[])
 [M]org.javaan.JavaanCli.main(java.lang.String[])
 [M]org.javaan.JavaanCli.main(java.lang.String[])
 [M]org.javaan.JavaanCli.maxCommandNameLength()
 [M]org.javaan.JavaanCli.maxCommandNameLength()
 [M]org.javaan.JavaanCli.printCommandUsage(org.javaan.Command,org.apache.commons.cli.Options)
 [M]org.javaan.JavaanCli.printCommandUsage(org.javaan.Command,org.apache.commons.cli.Options)
 [M]org.javaan.JavaanCli.printParagraph(java.lang.String)
 [M]org.javaan.JavaanCli.printParagraph(java.lang.String)
 [M]org.javaan.JavaanCli.printSeparator()
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.JavaanCli.printUsage(boolean)
 [M]org.javaan.ReturnCodes.<clinit>()
 [M]org.javaan.bytecode.CallGraphBuilder$1.<clinit>()
 [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
 [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
 [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
 [M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
 [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.build()
 [M]org.javaan.bytecode.CallGraphBuilder.build()
 [M]org.javaan.bytecode.CallGraphBuilder.build()
 [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.CallGraphBuilder.getMissingTypes()
 [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$0(org.javaan.model.Method)
 [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$0(org.javaan.model.Method)
 [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$1(org.javaan.model.Method)
 [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$2(org.apache.commons.lang3.tuple.ImmutablePair)
 [M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$2(org.apache.commons.lang3.tuple.ImmutablePair)
 [M]org.javaan.bytecode.CallGraphBuilder.processClasses()
 [M]org.javaan.bytecode.ClassContextBuilder.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz,org.javaan.graph.Tree)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
 [M]org.javaan.bytecode.ClassContextBuilder.getInterface(java.lang.String)
 [M]org.javaan.bytecode.ClassContextBuilder.getInterface(java.lang.String)
 [M]org.javaan.bytecode.ClassContextBuilder.getInterfacesOfClass(org.javaan.model.Clazz)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.getSuperClazz(org.javaan.model.Clazz)
 [M]org.javaan.bytecode.ClassContextBuilder.getSuperClazz(org.javaan.model.Clazz)
 [M]org.javaan.bytecode.ClassContextBuilder.getSuperClazz(org.javaan.model.Clazz)
 [M]org.javaan.bytecode.ClassContextBuilder.getSuperInterfacesOfInterface(org.javaan.model.Interface)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$0(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$2(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$3(org.javaan.model.Type)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$4(org.javaan.model.Interface)
 [M]org.javaan.bytecode.ClassContextBuilder.lambda$build$6(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
 [M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
 [M]org.javaan.bytecode.JarFileLoader.lambda$processJarsInJar$3(java.util.jar.JarFile,java.util.jar.JarEntry)
 [M]org.javaan.bytecode.JarFileLoader.loadJavaClasses(java.lang.String[])
 [M]org.javaan.bytecode.JarFileLoader.loadJavaClasses(java.lang.String[])
 [M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
 [M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
 [M]org.javaan.bytecode.ReflectionTypeLoader$1.<clinit>()
 [M]org.javaan.bytecode.ReflectionTypeLoader.addTypesNeedLoading(java.util.List,java.util.Set,java.util.List)
 [M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
 [M]org.javaan.bytecode.ReflectionTypeLoader.loadMissingTypes(java.util.List)
 [M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
 [M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.Class[])
 [M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.annotation.Annotation[])
 [M]org.javaan.bytecode.SignatureUtil.createClassSignatures(org.apache.bcel.generic.Type[])
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Constructor)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Constructor)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Method)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Method)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.classfile.Method)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.classfile.Method)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
 [M]org.javaan.commands.BaseCallGraphCommand.<init>()
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseCallGraphCommand.getFormatter()
 [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.<init>()
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BaseClassDependencyGraphCommand.getTypeFormatter()
 [M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[])
 [M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[])
 [M]org.javaan.commands.BaseDependencyGraphCommand.<init>()
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.BaseDependencyGraphCommand.getConsoleDependencyFormatter()
 [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
 [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
 [M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.<init>()
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle()
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.commands.BasePackageDependencyGraphCommand.getTypeFormatter()
 [M]org.javaan.commands.BaseSetOptionsCommand.<init>()
 [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseSetOptionsCommand.getDescription()
 [M]org.javaan.commands.BaseSetOptionsCommand.listPersistentOptions(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseSetOptionsCommand.listPersistentOptions(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseSetOptionsCommand.processOptions(org.javaan.CommandContext,java.lang.String[])
 [M]org.javaan.commands.BaseSetOptionsCommand.processOptions(org.javaan.CommandContext,java.lang.String[])
 [M]org.javaan.commands.BaseSetOptionsCommand.processOptions(org.javaan.CommandContext,java.lang.String[])
 [M]org.javaan.commands.BaseTypeLoadingCommand.<init>()
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.Benchmark.<init>()
 [M]org.javaan.commands.Benchmark.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.Benchmark.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.Benchmark.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
 [M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
 [M]org.javaan.commands.Benchmark.printCsvRow(java.io.Writer,java.lang.String,java.lang.String,long,long)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
 [M]org.javaan.commands.FilterUtil.filter(java.util.Collection,org.javaan.commands.FilterUtil$Matcher)
 [M]org.javaan.commands.ListClasses$1.<clinit>()
 [M]org.javaan.commands.ListClasses.<init>()
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListClasses.printClasses(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListDuplicates.<init>()
 [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
 [M]org.javaan.commands.ListInterfaces$1.<clinit>()
 [M]org.javaan.commands.ListInterfaces.<init>()
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListInterfaces.printInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
 [M]org.javaan.commands.ListMissingTypes.<init>()
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.<init>()
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
 [M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
 [M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
 [M]org.javaan.commands.MethodMatcher.acceptAnnotationClass(org.javaan.model.Method)
 [M]org.javaan.commands.MethodMatcher.acceptMethodName(org.javaan.model.Method)
 [M]org.javaan.commands.MethodMatcher.acceptMethodName(org.javaan.model.Method)
 [M]org.javaan.commands.NameMatcher.accept(java.lang.Object)
 [M]org.javaan.commands.NameMatcher.accept(org.javaan.model.NamedObject)
 [M]org.javaan.commands.ResetOptions.<init>()
 [M]org.javaan.commands.ResetOptions.processOption(org.javaan.Settings,java.lang.String)
 [M]org.javaan.commands.SetOptions.<init>()
 [M]org.javaan.commands.SetOptions.processOption(org.javaan.Settings,java.lang.String)
 [M]org.javaan.commands.ShowCalleeGraph.<init>()
 [M]org.javaan.commands.ShowCalleeGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
 [M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
 [M]org.javaan.commands.ShowCallerGraph.<init>()
 [M]org.javaan.commands.ShowCallerGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
 [M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.<init>()
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.<init>()
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
 [M]org.javaan.commands.ShowPackageUsedGraph.<init>()
 [M]org.javaan.commands.ShowPackageUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowPackageUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowPackageUsingGraph.<init>()
 [M]org.javaan.commands.ShowPackageUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowPackageUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowUsedGraph.<init>()
 [M]org.javaan.commands.ShowUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowUsingGraph.<init>()
 [M]org.javaan.commands.ShowUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.commands.ShowUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
 [M]org.javaan.graph.BreadthFirstTraversalListener.edgeTraversed(org.jgrapht.event.EdgeTraversalEvent)
 [M]org.javaan.graph.BreadthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.BreadthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.DepthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.DepthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.DepthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.DepthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent)
 [M]org.javaan.graph.DirectedGraphUtils.sourceVerticesOf(java.lang.Object,org.jgrapht.Graph)
 [M]org.javaan.graph.DirectedGraphUtils.targetVerticesOf(java.lang.Object,org.jgrapht.Graph)
 [M]org.javaan.graph.ExtendedGraph.<init>(org.jgrapht.Graph)
 [M]org.javaan.graph.ExtendedGraph.collectLeaves(java.lang.Object,boolean)
 [M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean)
 [M]org.javaan.graph.ExtendedGraph.predecessorsOf(java.lang.Object)
 [M]org.javaan.graph.ExtendedGraph.sourceVerticesOf(java.lang.Object)
 [M]org.javaan.graph.ExtendedGraph.successorsOf(java.lang.Object)
 [M]org.javaan.graph.ExtendedGraph.targetVerticesOf(java.lang.Object)
 [M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
 [M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
 [M]org.javaan.graph.ExtendedGraph.traverseGraph(org.jgrapht.Graph,java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
 [M]org.javaan.graph.ExtendedGraph.traverseGraph(org.jgrapht.Graph,java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
 [M]org.javaan.graph.ExtendedGraph.traverseGraph(org.jgrapht.Graph,java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
 [M]org.javaan.graph.GraphFactory$1.getEdgeWeight(java.lang.Object)
 [M]org.javaan.graph.GraphFactory$1.getEdgeWeight(org.javaan.model.Dependency)
 [M]org.javaan.graph.GraphFactory.createDependencyGraph()
 [M]org.javaan.graph.GraphFactory.createDependencyGraph()
 [M]org.javaan.graph.GraphFactory.createSubgraphView(org.javaan.graph.ExtendedGraph,java.util.Set,boolean)
 [M]org.javaan.graph.GraphFactory.createSubgraphView(org.javaan.graph.ExtendedGraph,java.util.Set,boolean)
 [M]org.javaan.graph.GraphFactory.createVertexEdgeGraph(java.util.function.Supplier)
 [M]org.javaan.graph.GraphFactory.createVertexEdgeTree(java.util.function.Supplier)
 [M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles()
 [M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles()
 [M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoint(java.util.List)
 [M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoints()
 [M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoints()
 [M]org.javaan.graph.ParentChildMap.inverse()
 [M]org.javaan.graph.ParentChildMap.inverse()
 [M]org.javaan.graph.ParentChildMap.inverse()
 [M]org.javaan.graph.ParentChildMap.put(java.lang.Object,java.lang.Object)
 [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String)
 [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String,java.lang.String)
 [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String,java.lang.String)
 [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
 [M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
 [M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String)
 [M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String[])
 [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
 [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
 [M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
 [M]org.javaan.graph.TopologicalMultiGraphSort.getTargetVerticesSortedByDegree(java.lang.Object)
 [M]org.javaan.graph.TopologicalMultiGraphSort.initializeDatastructures()
 [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
 [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
 [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
 [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
 [M]org.javaan.graph.TopologicalMultiGraphSort.sort()
 [M]org.javaan.graph.Tree.<init>(org.jgrapht.Graph)
 [M]org.javaan.graph.Tree.addEdge(java.lang.Object,java.lang.Object)
 [M]org.javaan.graph.Tree.predecessorPathOf(java.lang.Object)
 [M]org.javaan.graph.Tree.sourceVertexOf(java.lang.Object)
 [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object)
 [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,org.javaan.model.Dependency)
 [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object)
 [M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,org.javaan.model.Dependency)
 [M]org.javaan.jgraphx.DependencyGraphCellStyle.getVertexLabel(org.javaan.model.GraphView,java.lang.Object)
 [M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
 [M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
 [M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
 [M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
 [M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
 [M]org.javaan.jgraphx.MxGraphBuilder.addVertices()
 [M]org.javaan.jgraphx.MxGraphBuilder.addVertices()
 [M]org.javaan.jgraphx.MxGraphBuilder.addVertices()
 [M]org.javaan.jgraphx.MxGraphBuilder.build()
 [M]org.javaan.jgraphx.MxGraphBuilder.build()
 [M]org.javaan.model.CallGraph$1.<clinit>()
 [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
 [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.getCallee(org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.getCallers(org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.getDependencyCycles()
 [M]org.javaan.model.CallGraph.getDependencyCycles(org.jgrapht.Graph)
 [M]org.javaan.model.CallGraph.getLeafCallee(org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.getLeafCallers(org.javaan.model.Method)
 [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsedTypes(org.javaan.model.Type)
 [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getLeafUsingTypes(org.javaan.model.Type)
 [M]org.javaan.model.CallGraph.getPackageDependencyCycles()
 [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
 [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
 [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
 [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
 [M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
 [M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
 [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
 [M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
 [M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
 [M]org.javaan.model.ClassContext$1.<clinit>()
 [M]org.javaan.model.ClassContext.<init>()
 [M]org.javaan.model.ClassContext.<init>()
 [M]org.javaan.model.ClassContext.<init>()
 [M]org.javaan.model.ClassContext.<init>()
 [M]org.javaan.model.ClassContext.<init>()
 [M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.addInterfaceOfClass(org.javaan.model.Clazz,org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
 [M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
 [M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
 [M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
 [M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
 [M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.addSuperInterface(org.javaan.model.Interface,org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.addSuperInterface(org.javaan.model.Interface,org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.addSuperInterface(org.javaan.model.Interface,org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.contains(java.lang.String)
 [M]org.javaan.model.ClassContext.findMethod(java.util.List,java.lang.String)
 [M]org.javaan.model.ClassContext.get(java.lang.String)
 [M]org.javaan.model.ClassContext.getClassesOfPackage(org.javaan.model.Package)
 [M]org.javaan.model.ClassContext.getClassesOfPackage(org.javaan.model.Package)
 [M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getDirectSpecializationsOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getInterfacesOfPackage(org.javaan.model.Package)
 [M]org.javaan.model.ClassContext.getInterfacesOfPackage(org.javaan.model.Package)
 [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String)
 [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String)
 [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String)
 [M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String)
 [M]org.javaan.model.ClassContext.getMethods()
 [M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getMethodsOfClasses()
 [M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type)
 [M]org.javaan.model.ClassContext.getPackages()
 [M]org.javaan.model.ClassContext.getSpecializationOfInterface(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getSpecializationsOfClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getSuperClass(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getSuperClassHierarchy(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getSuperInterfaces(org.javaan.model.Interface)
 [M]org.javaan.model.ClassContext.getTypesOfPackage(org.javaan.model.Package)
 [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
 [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
 [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
 [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
 [M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
 [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz)
 [M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface)
 [M]org.javaan.model.Clazz.<init>(java.lang.Class)
 [M]org.javaan.model.Clazz.<init>(java.lang.String)
 [M]org.javaan.model.Clazz.<init>(java.lang.String,java.lang.String,java.util.List)
 [M]org.javaan.model.Clazz.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
 [M]org.javaan.model.DeclaringResolver.resolve(org.javaan.model.Method)
 [M]org.javaan.model.Dependency.<init>(org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
 [M]org.javaan.model.Dependency.<init>(org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
 [M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
 [M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
 [M]org.javaan.model.Dependency.createName(org.javaan.model.NamedObject,org.javaan.model.NamedObject)
 [M]org.javaan.model.DuplicatesFinder.find()
 [M]org.javaan.model.ImplementationResolver$1.<clinit>()
 [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
 [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
 [M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
 [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
 [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
 [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
 [M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
 [M]org.javaan.model.Interface.<init>(java.lang.Class)
 [M]org.javaan.model.Interface.<init>(java.lang.String)
 [M]org.javaan.model.Interface.<init>(java.lang.String,java.util.List)
 [M]org.javaan.model.Interface.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
 [M]org.javaan.model.InterfaceMethodFinder.<init>(org.javaan.model.ClassContext,java.lang.String)
 [M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
 [M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
 [M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List)
 [M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.<init>(org.javaan.model.Type,java.lang.String)
 [M]org.javaan.model.Method.<init>(org.javaan.model.Type,java.lang.String)
 [M]org.javaan.model.Method.buildUniqueMethodName(org.javaan.model.Type,java.lang.String)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
 [M]org.javaan.model.Method.createMethodGen()
 [M]org.javaan.model.Method.createMethodGen()
 [M]org.javaan.model.NamedObjectBase.compareTo(java.lang.Object)
 [M]org.javaan.model.NamedObjectBase.compareTo(org.javaan.model.NamedObject)
 [M]org.javaan.model.NamedObjectMap.<init>(java.util.Collection)
 [M]org.javaan.model.NamedObjectMap.add(org.javaan.model.NamedObject)
 [M]org.javaan.model.NamedObjectMap.addAll(java.util.Collection)
 [M]org.javaan.model.Package.<init>(java.lang.String)
 [M]org.javaan.model.Package.<init>(org.javaan.model.Type)
 [M]org.javaan.model.Package.<init>(org.javaan.model.Type)
 [M]org.javaan.model.Package.getPackageNameOfType(org.javaan.model.Type)
 [M]org.javaan.model.Type$JavaType.<clinit>()
 [M]org.javaan.model.Type.<init>(java.lang.Class)
 [M]org.javaan.model.Type.<init>(java.lang.String)
 [M]org.javaan.model.Type.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
 [M]org.javaan.model.Type.create(java.lang.String)
 [M]org.javaan.model.Type.create(java.lang.String)
 [M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String)
 [M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String)
 [M]org.javaan.model.Type.getShortName()
 [M]org.javaan.model.Type.getShortName()
 [M]org.javaan.print.ClazzFormatter.format(java.lang.Object)
 [M]org.javaan.print.ClazzFormatter.format(org.javaan.model.Clazz)
 [M]org.javaan.print.ConsoleDependencyFormatter.format(java.lang.Object)
 [M]org.javaan.print.ConsoleDependencyFormatter.format(org.javaan.model.Dependency)
 [M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
 [M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter,java.lang.String)
 [M]org.javaan.print.GraphPrinter.visitEdge(java.lang.Object,int)
 [M]org.javaan.print.GraphPrinter.visitGraph(org.jgrapht.Graph,int)
 [M]org.javaan.print.GraphPrinter.visitGraph(org.jgrapht.Graph,int)
 [M]org.javaan.print.GraphPrinter.visitGraph(org.jgrapht.Graph,int)
 [M]org.javaan.print.GraphPrinter.visitVertex(java.lang.Object,int)
 [M]org.javaan.print.InterfaceFormatter.format(java.lang.Object)
 [M]org.javaan.print.InterfaceFormatter.format(org.javaan.model.Interface)
 [M]org.javaan.print.MethodFormatter.format(java.lang.Object)
 [M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
 [M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
 [M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
 [M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
 [M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
 [M]org.javaan.print.MethodListDependencyFormatter.format(java.lang.Object)
 [M]org.javaan.print.MethodListDependencyFormatter.format(org.javaan.model.Dependency)
 [M]org.javaan.print.MethodListDependencyFormatter.format(org.javaan.model.Dependency)
 [M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(java.lang.Object)
 [M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(org.javaan.model.Dependency)
 [M]org.javaan.print.PackageFormatter.format(java.lang.Object)
 [M]org.javaan.print.PackageFormatter.format(org.javaan.model.Package)
 [M]org.javaan.print.PrintUtil.indent(java.io.Writer,org.javaan.print.ObjectFormatter,java.lang.Object,int)
 [M]org.javaan.print.PrintUtil.println(java.io.Writer,java.util.Collection,java.lang.String,java.lang.String,java.lang.String)
 [M]org.javaan.print.PrintUtil.println(java.io.Writer,org.javaan.print.ObjectFormatter,java.util.Collection,java.lang.String,java.lang.String,java.lang.String)
 [M]org.javaan.print.TypeFormatter$1.<clinit>()
 [M]org.javaan.print.TypeFormatter.<init>()
 [M]org.javaan.print.TypeFormatter.<init>()
 [M]org.javaan.print.TypeFormatter.format(java.lang.Object)
 [M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.TypeInformationFormatter.format(java.lang.Object)
 [M]org.javaan.print.TypeInformationFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.TypeInformationFormatter.format(org.javaan.model.Type)
 [M]org.javaan.print.VertexEdgeGraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter)
 [M]org.javaan.print.VertexEdgeGraphPrinter.visitVertex(java.lang.Object,int)
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
[M]org.javaan.Command.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.Command.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.Command.execute(org.javaan.CommandContext)
[M]org.javaan.Command.execute(org.javaan.CommandContext):
[M]org.javaan.Command.getDescription()
[M]org.javaan.Command.getDescription():
[M]org.javaan.Command.getHelpCommandLine()
[M]org.javaan.Command.getHelpCommandLine():
[M]org.javaan.Command.getName()
[M]org.javaan.Command.getName():
[M]org.javaan.CommandContext$AdditionalTypeInformation.<clinit>()
[M]org.javaan.CommandContext$AdditionalTypeInformation.<clinit>():
[M]org.javaan.CommandContext$AdditionalTypeInformation.<init>(java.lang.String,int)
[M]org.javaan.CommandContext$AdditionalTypeInformation.<init>(java.lang.String,int):
[M]org.javaan.CommandContext$AdditionalTypeInformation.valueOf(java.lang.String)
[M]org.javaan.CommandContext$AdditionalTypeInformation.valueOf(java.lang.String):
[M]org.javaan.CommandContext$AdditionalTypeInformation.values()
[M]org.javaan.CommandContext$AdditionalTypeInformation.values():
[M]org.javaan.CommandContext.<init>(java.io.Writer,org.apache.commons.cli.CommandLine,java.lang.String[],org.javaan.Settings)
[M]org.javaan.CommandContext.<init>(java.io.Writer,org.apache.commons.cli.CommandLine,java.lang.String[],org.javaan.Settings):
[M]org.javaan.CommandContext.getAdditionalTypeInformation()
[M]org.javaan.CommandContext.getAdditionalTypeInformation():
[M]org.javaan.CommandContext.getArguments()
[M]org.javaan.CommandContext.getArguments():
[M]org.javaan.CommandContext.getFilterCriteria()
[M]org.javaan.CommandContext.getFilterCriteria():
[M]org.javaan.CommandContext.getMethodFilterCriteria()
[M]org.javaan.CommandContext.getMethodFilterCriteria():
[M]org.javaan.CommandContext.getReturnCode()
[M]org.javaan.CommandContext.getReturnCode():
[M]org.javaan.CommandContext.getSettings()
[M]org.javaan.CommandContext.getSettings():
[M]org.javaan.CommandContext.getWriter()
[M]org.javaan.CommandContext.getWriter():
[M]org.javaan.CommandContext.hasFilterCriteria()
[M]org.javaan.CommandContext.hasFilterCriteria():
[M]org.javaan.CommandContext.isDisplay2dGraph()
[M]org.javaan.CommandContext.isDisplay2dGraph():
[M]org.javaan.CommandContext.isPrintLeaves()
[M]org.javaan.CommandContext.isPrintLeaves():
[M]org.javaan.CommandContext.isResolveDependenciesInClassHierarchy()
[M]org.javaan.CommandContext.isResolveDependenciesInClassHierarchy():
[M]org.javaan.CommandContext.isResolveMethodImplementations()
[M]org.javaan.CommandContext.isResolveMethodImplementations():
[M]org.javaan.CommandContext.isTopologicalSort()
[M]org.javaan.CommandContext.isTopologicalSort():
[M]org.javaan.CommandContext.setReturnCode(org.javaan.ReturnCodes)
[M]org.javaan.CommandContext.setReturnCode(org.javaan.ReturnCodes):
[M]org.javaan.CommandMap.<init>()
[M]org.javaan.CommandMap.<init>():
[M]org.javaan.CommandMap.addCommand(org.javaan.Command)
[M]org.javaan.CommandMap.addCommand(org.javaan.Command):
[M]org.javaan.CommandMap.getCommand(java.lang.String)
[M]org.javaan.CommandMap.getCommand(java.lang.String):
[M]org.javaan.CommandMap.getCommands()
[M]org.javaan.CommandMap.getCommands():
[M]org.javaan.Graph2dDisplay$1.<init>(org.javaan.Graph2dDisplay,com.mxgraph.view.mxGraph)
[M]org.javaan.Graph2dDisplay$1.<init>(org.javaan.Graph2dDisplay,com.mxgraph.view.mxGraph):
[M]org.javaan.Graph2dDisplay$1.createHandlers()
[M]org.javaan.Graph2dDisplay$1.createHandlers():
[M]org.javaan.Graph2dDisplay$2.<init>(org.javaan.Graph2dDisplay,org.javaan.Settings,javax.swing.JFrame)
[M]org.javaan.Graph2dDisplay$2.<init>(org.javaan.Graph2dDisplay,org.javaan.Settings,javax.swing.JFrame):
[M]org.javaan.Graph2dDisplay$2.windowClosing(java.awt.event.WindowEvent)
[M]org.javaan.Graph2dDisplay$2.windowClosing(java.awt.event.WindowEvent):
[M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings)
[M]org.javaan.Graph2dDisplay.<init>(java.lang.String,org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle,org.javaan.Settings):
[M]org.javaan.JavaanCli.<clinit>()
[M]org.javaan.JavaanCli.<clinit>():
[M]org.javaan.JavaanCli.<init>(java.lang.String[],org.javaan.CommandMap,java.io.Writer)
[M]org.javaan.JavaanCli.<init>(java.lang.String[],org.javaan.CommandMap,java.io.Writer):
[M]org.javaan.JavaanCli.createIndent()
[M]org.javaan.JavaanCli.createIndent():
[M]org.javaan.JavaanCli.execute()
[M]org.javaan.JavaanCli.execute():
[M]org.javaan.JavaanCli.formatCommandName(java.lang.String,java.lang.String)
[M]org.javaan.JavaanCli.formatCommandName(java.lang.String,java.lang.String):
[M]org.javaan.JavaanCli.getCommands()
[M]org.javaan.JavaanCli.getCommands():
[M]org.javaan.JavaanCli.main(java.lang.String[])
[M]org.javaan.JavaanCli.main(java.lang.String[]):
[M]org.javaan.JavaanCli.maxCommandNameLength()
[M]org.javaan.JavaanCli.maxCommandNameLength():
[M]org.javaan.JavaanCli.printCommandUsage(org.javaan.Command,org.apache.commons.cli.Options)
[M]org.javaan.JavaanCli.printCommandUsage(org.javaan.Command,org.apache.commons.cli.Options):
[M]org.javaan.JavaanCli.printParagraph(java.lang.String)
[M]org.javaan.JavaanCli.printParagraph(java.lang.String):
[M]org.javaan.JavaanCli.printSeparator()
[M]org.javaan.JavaanCli.printSeparator():
[M]org.javaan.JavaanCli.printUsage(boolean)
[M]org.javaan.JavaanCli.printUsage(boolean):
[M]org.javaan.JavaanCli.setLoggerLevel(java.util.logging.Level)
[M]org.javaan.JavaanCli.setLoggerLevel(java.util.logging.Level):
[M]org.javaan.ReturnCodes.<clinit>()
[M]org.javaan.ReturnCodes.<clinit>():
[M]org.javaan.ReturnCodes.<init>(java.lang.String,int,int)
[M]org.javaan.ReturnCodes.<init>(java.lang.String,int,int):
[M]org.javaan.ReturnCodes.getValue()
[M]org.javaan.ReturnCodes.getValue():
[M]org.javaan.ReturnCodes.valueOf(java.lang.String)
[M]org.javaan.ReturnCodes.valueOf(java.lang.String):
[M]org.javaan.ReturnCodes.values()
[M]org.javaan.ReturnCodes.values():
[M]org.javaan.Settings.<init>()
[M]org.javaan.Settings.<init>():
[M]org.javaan.Settings.<init>(java.lang.String)
[M]org.javaan.Settings.<init>(java.lang.String):
[M]org.javaan.Settings.disableOption(java.lang.String)
[M]org.javaan.Settings.disableOption(java.lang.String):
[M]org.javaan.Settings.enableOption(java.lang.String)
[M]org.javaan.Settings.enableOption(java.lang.String):
[M]org.javaan.Settings.isDisplay2dGraph()
[M]org.javaan.Settings.isDisplay2dGraph():
[M]org.javaan.Settings.isOptionEnabled(java.lang.String)
[M]org.javaan.Settings.isOptionEnabled(java.lang.String):
[M]org.javaan.Settings.isResolveDependenciesInClassHierarchy()
[M]org.javaan.Settings.isResolveDependenciesInClassHierarchy():
[M]org.javaan.Settings.isResolveMethodImplementations()
[M]org.javaan.Settings.isResolveMethodImplementations():
[M]org.javaan.Settings.putGraph2dFrameLocationAndSize(javax.swing.JFrame)
[M]org.javaan.Settings.putGraph2dFrameLocationAndSize(javax.swing.JFrame):
[M]org.javaan.Settings.setGraph2dFrameLocationAndSize(javax.swing.JFrame)
[M]org.javaan.Settings.setGraph2dFrameLocationAndSize(javax.swing.JFrame):
[M]org.javaan.bytecode.CallGraphBuilder$1.<clinit>()
[M]org.javaan.bytecode.CallGraphBuilder$1.<clinit>():
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.<init>(org.javaan.bytecode.CallGraphBuilder,org.javaan.model.Method,org.apache.bcel.generic.MethodGen)
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.<init>(org.javaan.bytecode.CallGraphBuilder,org.javaan.model.Method,org.apache.bcel.generic.MethodGen):
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.start()
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.start():
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE):
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL):
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC):
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)
[M]org.javaan.bytecode.CallGraphBuilder$MethodVisitor.visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL):
[M]org.javaan.bytecode.CallGraphBuilder.<clinit>()
[M]org.javaan.bytecode.CallGraphBuilder.<clinit>():
[M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean)
[M]org.javaan.bytecode.CallGraphBuilder.<init>(org.javaan.model.ClassContext,boolean,boolean):
[M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
[M]org.javaan.bytecode.CallGraphBuilder.addMethodCall(org.javaan.model.Method,org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen):
[M]org.javaan.bytecode.CallGraphBuilder.build()
[M]org.javaan.bytecode.CallGraphBuilder.build():
[M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
[M]org.javaan.bytecode.CallGraphBuilder.getMethod(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen):
[M]org.javaan.bytecode.CallGraphBuilder.getMissingTypes()
[M]org.javaan.bytecode.CallGraphBuilder.getMissingTypes():
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$0(org.javaan.model.Method)
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$0(org.javaan.model.Method):
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$1(org.javaan.model.Method)
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$1(org.javaan.model.Method):
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$2(org.apache.commons.lang3.tuple.ImmutablePair)
[M]org.javaan.bytecode.CallGraphBuilder.lambda$processClasses$2(org.apache.commons.lang3.tuple.ImmutablePair):
[M]org.javaan.bytecode.CallGraphBuilder.processClasses()
[M]org.javaan.bytecode.CallGraphBuilder.processClasses():
[M]org.javaan.bytecode.ClassContextBuilder.<clinit>()
[M]org.javaan.bytecode.ClassContextBuilder.<clinit>():
[M]org.javaan.bytecode.ClassContextBuilder.<init>()
[M]org.javaan.bytecode.ClassContextBuilder.<init>():
[M]org.javaan.bytecode.ClassContextBuilder.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz,org.javaan.graph.Tree)
[M]org.javaan.bytecode.ClassContextBuilder.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz,org.javaan.graph.Tree):
[M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List)
[M]org.javaan.bytecode.ClassContextBuilder.build(java.util.List):
[M]org.javaan.bytecode.ClassContextBuilder.getInterface(java.lang.String)
[M]org.javaan.bytecode.ClassContextBuilder.getInterface(java.lang.String):
[M]org.javaan.bytecode.ClassContextBuilder.getInterfacesOfClass(org.javaan.model.Clazz)
[M]org.javaan.bytecode.ClassContextBuilder.getInterfacesOfClass(org.javaan.model.Clazz):
[M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type)
[M]org.javaan.bytecode.ClassContextBuilder.getMethodsOfType(org.javaan.model.Type):
[M]org.javaan.bytecode.ClassContextBuilder.getMissingTypes()
[M]org.javaan.bytecode.ClassContextBuilder.getMissingTypes():
[M]org.javaan.bytecode.ClassContextBuilder.getSuperClazz(org.javaan.model.Clazz)
[M]org.javaan.bytecode.ClassContextBuilder.getSuperClazz(org.javaan.model.Clazz):
[M]org.javaan.bytecode.ClassContextBuilder.getSuperInterfacesOfInterface(org.javaan.model.Interface)
[M]org.javaan.bytecode.ClassContextBuilder.getSuperInterfacesOfInterface(org.javaan.model.Interface):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$0(org.javaan.model.Type)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$0(org.javaan.model.Type):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$1(org.javaan.model.Clazz):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$2(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$2(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$3(org.javaan.model.Type)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$3(org.javaan.model.Type):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$4(org.javaan.model.Interface)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$4(org.javaan.model.Interface):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$5(org.apache.commons.lang3.tuple.ImmutablePair)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$5(org.apache.commons.lang3.tuple.ImmutablePair):
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$6(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair)
[M]org.javaan.bytecode.ClassContextBuilder.lambda$build$6(org.javaan.model.ClassContextInternals,org.apache.commons.lang3.tuple.ImmutablePair):
[M]org.javaan.bytecode.JarFileLoader.<clinit>()
[M]org.javaan.bytecode.JarFileLoader.<clinit>():
[M]org.javaan.bytecode.JarFileLoader.<init>()
[M]org.javaan.bytecode.JarFileLoader.<init>():
[M]org.javaan.bytecode.JarFileLoader.createTempJarFile(java.util.jar.JarFile,java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.createTempJarFile(java.util.jar.JarFile,java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.lambda$processJar$0(java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.lambda$processJar$0(java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.lambda$processJar$1(java.util.jar.JarFile,java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.lambda$processJarsInJar$2(java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.lambda$processJarsInJar$2(java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.lambda$processJarsInJar$3(java.util.jar.JarFile,java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.lambda$processJarsInJar$3(java.util.jar.JarFile,java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.loadJavaClasses(java.lang.String[])
[M]org.javaan.bytecode.JarFileLoader.loadJavaClasses(java.lang.String[]):
[M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry)
[M]org.javaan.bytecode.JarFileLoader.parse(java.lang.String,java.util.jar.JarFile,java.util.jar.JarEntry):
[M]org.javaan.bytecode.JarFileLoader.processJar(java.util.jar.JarFile)
[M]org.javaan.bytecode.JarFileLoader.processJar(java.util.jar.JarFile):
[M]org.javaan.bytecode.JarFileLoader.processJarsInJar(java.util.jar.JarFile)
[M]org.javaan.bytecode.JarFileLoader.processJarsInJar(java.util.jar.JarFile):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.<init>(org.javaan.model.ClassContext)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.<init>(org.javaan.model.ClassContext):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addClass(org.javaan.model.Clazz,java.lang.String,java.util.List):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addInterface(org.javaan.model.Interface,java.util.List):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.addMethods(org.javaan.model.Type,java.lang.Class):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.createTypeFromClass(java.lang.String):
[M]org.javaan.bytecode.ReflectionClassContextBuilder.getMissingTypes()
[M]org.javaan.bytecode.ReflectionClassContextBuilder.getMissingTypes():
[M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String)
[M]org.javaan.bytecode.ReflectionClassContextBuilder.getType(java.lang.String):
[M]org.javaan.bytecode.ReflectionTypeLoader$1.<clinit>()
[M]org.javaan.bytecode.ReflectionTypeLoader$1.<clinit>():
[M]org.javaan.bytecode.ReflectionTypeLoader.<init>()
[M]org.javaan.bytecode.ReflectionTypeLoader.<init>():
[M]org.javaan.bytecode.ReflectionTypeLoader.addTypesNeedLoading(java.util.List,java.util.Set,java.lang.String)
[M]org.javaan.bytecode.ReflectionTypeLoader.addTypesNeedLoading(java.util.List,java.util.Set,java.lang.String):
[M]org.javaan.bytecode.ReflectionTypeLoader.addTypesNeedLoading(java.util.List,java.util.Set,java.util.List)
[M]org.javaan.bytecode.ReflectionTypeLoader.addTypesNeedLoading(java.util.List,java.util.Set,java.util.List):
[M]org.javaan.bytecode.ReflectionTypeLoader.createTypeLookup(java.util.List)
[M]org.javaan.bytecode.ReflectionTypeLoader.createTypeLookup(java.util.List):
[M]org.javaan.bytecode.ReflectionTypeLoader.getMissingTypes()
[M]org.javaan.bytecode.ReflectionTypeLoader.getMissingTypes():
[M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type)
[M]org.javaan.bytecode.ReflectionTypeLoader.lambda$loadMissingTypes$0(java.util.Set,org.javaan.model.Type):
[M]org.javaan.bytecode.ReflectionTypeLoader.loadMissingTypes(java.util.List)
[M]org.javaan.bytecode.ReflectionTypeLoader.loadMissingTypes(java.util.List):
[M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String)
[M]org.javaan.bytecode.ReflectionTypeLoader.loadType(java.lang.String):
[M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set)
[M]org.javaan.bytecode.ReflectionTypeLoader.resolveDependencies(org.javaan.model.Type,java.util.Set):
[M]org.javaan.bytecode.SignatureUtil.<init>()
[M]org.javaan.bytecode.SignatureUtil.<init>():
[M]org.javaan.bytecode.SignatureUtil.createClassSignature(java.lang.reflect.Type)
[M]org.javaan.bytecode.SignatureUtil.createClassSignature(java.lang.reflect.Type):
[M]org.javaan.bytecode.SignatureUtil.createClassSignature(org.apache.bcel.generic.Type)
[M]org.javaan.bytecode.SignatureUtil.createClassSignature(org.apache.bcel.generic.Type):
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.Class[])
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.Class[]):
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.annotation.Annotation[])
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(java.lang.annotation.Annotation[]):
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(org.apache.bcel.classfile.AnnotationEntry[])
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(org.apache.bcel.classfile.AnnotationEntry[]):
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(org.apache.bcel.generic.Type[])
[M]org.javaan.bytecode.SignatureUtil.createClassSignatures(org.apache.bcel.generic.Type[]):
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.String,java.util.List)
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.String,java.util.List):
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Constructor)
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Constructor):
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Method)
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(java.lang.reflect.Method):
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.classfile.Method)
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.classfile.Method):
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen)
[M]org.javaan.bytecode.SignatureUtil.createMethodSignature(org.apache.bcel.generic.InvokeInstruction,org.apache.bcel.generic.ConstantPoolGen):
[M]org.javaan.commands.BaseCallGraphCommand.<init>()
[M]org.javaan.commands.BaseCallGraphCommand.<init>():
[M]org.javaan.commands.BaseCallGraphCommand.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.BaseCallGraphCommand.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.BaseCallGraphCommand.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
[M]org.javaan.commands.BaseCallGraphCommand.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method):
[M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.BaseCallGraphCommand.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.BaseCallGraphCommand.getFormatter()
[M]org.javaan.commands.BaseCallGraphCommand.getFormatter():
[M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
[M]org.javaan.commands.BaseCallGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String):
[M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
[M]org.javaan.commands.BaseCallGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter):
[M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
[M]org.javaan.commands.BaseCallGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter):
[M]org.javaan.commands.BaseCallGraphCommand.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
[M]org.javaan.commands.BaseCallGraphCommand.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor):
[M]org.javaan.commands.BaseClassDependencyGraphCommand.<init>()
[M]org.javaan.commands.BaseClassDependencyGraphCommand.<init>():
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle()
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getDependencyGraphCellStyle():
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String):
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getTypeFormatter()
[M]org.javaan.commands.BaseClassDependencyGraphCommand.getTypeFormatter():
[M]org.javaan.commands.BaseCommand.<clinit>()
[M]org.javaan.commands.BaseCommand.<clinit>():
[M]org.javaan.commands.BaseCommand.<init>()
[M]org.javaan.commands.BaseCommand.<init>():
[M]org.javaan.commands.BaseCommand.getHelpCommandLine()
[M]org.javaan.commands.BaseCommand.getHelpCommandLine():
[M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[])
[M]org.javaan.commands.BaseCommand.loadTypes(java.lang.String[]):
[M]org.javaan.commands.BaseDependencyGraphCommand.<init>()
[M]org.javaan.commands.BaseDependencyGraphCommand.<init>():
[M]org.javaan.commands.BaseDependencyGraphCommand.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.BaseDependencyGraphCommand.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.BaseDependencyGraphCommand.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.BaseDependencyGraphCommand.getConsoleDependencyFormatter()
[M]org.javaan.commands.BaseDependencyGraphCommand.getConsoleDependencyFormatter():
[M]org.javaan.commands.BaseDependencyGraphCommand.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
[M]org.javaan.commands.BaseDependencyGraphCommand.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set):
[M]org.javaan.commands.BaseDependencyGraphCommand.getDependencyGraphCellStyle()
[M]org.javaan.commands.BaseDependencyGraphCommand.getDependencyGraphCellStyle():
[M]org.javaan.commands.BaseDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
[M]org.javaan.commands.BaseDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String):
[M]org.javaan.commands.BaseDependencyGraphCommand.getTypeFormatter()
[M]org.javaan.commands.BaseDependencyGraphCommand.getTypeFormatter():
[M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext)
[M]org.javaan.commands.BaseDependencyGraphCommand.lambda$execute$0(org.javaan.model.GraphView,org.javaan.CommandContext):
[M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
[M]org.javaan.commands.BaseDependencyGraphCommand.printGraph(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter):
[M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter)
[M]org.javaan.commands.BaseDependencyGraphCommand.printLeafObjects(org.javaan.model.CallGraph,java.io.Writer,java.util.Collection,org.javaan.print.ObjectFormatter):
[M]org.javaan.commands.BasePackageDependencyGraphCommand.<init>()
[M]org.javaan.commands.BasePackageDependencyGraphCommand.<init>():
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle()
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getDependencyGraphCellStyle():
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String)
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getInput(org.javaan.model.ClassContext,java.lang.String):
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getTypeFormatter()
[M]org.javaan.commands.BasePackageDependencyGraphCommand.getTypeFormatter():
[M]org.javaan.commands.BaseSetOptionsCommand.<init>()
[M]org.javaan.commands.BaseSetOptionsCommand.<init>():
[M]org.javaan.commands.BaseSetOptionsCommand.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext)
[M]org.javaan.commands.BaseSetOptionsCommand.execute(org.javaan.CommandContext):
[M]org.javaan.commands.BaseSetOptionsCommand.getDescription()
[M]org.javaan.commands.BaseSetOptionsCommand.getDescription():
[M]org.javaan.commands.BaseSetOptionsCommand.getDescriptionFormat()
[M]org.javaan.commands.BaseSetOptionsCommand.getDescriptionFormat():
[M]org.javaan.commands.BaseSetOptionsCommand.listPersistentOptions(org.javaan.CommandContext)
[M]org.javaan.commands.BaseSetOptionsCommand.listPersistentOptions(org.javaan.CommandContext):
[M]org.javaan.commands.BaseSetOptionsCommand.optionExists(java.lang.String)
[M]org.javaan.commands.BaseSetOptionsCommand.optionExists(java.lang.String):
[M]org.javaan.commands.BaseSetOptionsCommand.processOption(org.javaan.Settings,java.lang.String)
[M]org.javaan.commands.BaseSetOptionsCommand.processOption(org.javaan.Settings,java.lang.String):
[M]org.javaan.commands.BaseSetOptionsCommand.processOptions(org.javaan.CommandContext,java.lang.String[])
[M]org.javaan.commands.BaseSetOptionsCommand.processOptions(org.javaan.CommandContext,java.lang.String[]):
[M]org.javaan.commands.BaseTypeLoadingCommand.<init>()
[M]org.javaan.commands.BaseTypeLoadingCommand.<init>():
[M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext)
[M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext):
[M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.BaseTypeLoadingCommand.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.Benchmark.<init>()
[M]org.javaan.commands.Benchmark.<init>():
[M]org.javaan.commands.Benchmark.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.Benchmark.execute(org.javaan.CommandContext)
[M]org.javaan.commands.Benchmark.execute(org.javaan.CommandContext):
[M]org.javaan.commands.Benchmark.getDescription():
[M]org.javaan.commands.Benchmark.getHelpCommandLine():
[M]org.javaan.commands.Benchmark.getName():
[M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File)
[M]org.javaan.commands.Benchmark.lambda$execute$0(java.io.File):
[M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File)
[M]org.javaan.commands.Benchmark.lambda$execute$1(java.lang.String,java.io.Writer,java.io.File):
[M]org.javaan.commands.Benchmark.printCsvRow(java.io.Writer,java.lang.String,java.lang.String,long,long)
[M]org.javaan.commands.Benchmark.printCsvRow(java.io.Writer,java.lang.String,java.lang.String,long,long):
[M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer)
[M]org.javaan.commands.Benchmark.runBenchmark(java.lang.String,java.lang.String,java.io.Writer):
[M]org.javaan.commands.Benchmark.runWarmup(java.lang.String)
[M]org.javaan.commands.Benchmark.runWarmup(java.lang.String):
[M]org.javaan.commands.Benchmark.setLoggerLevel(java.util.logging.Level)
[M]org.javaan.commands.Benchmark.setLoggerLevel(java.util.logging.Level):
[M]org.javaan.commands.FilterUtil$Matcher.accept(java.lang.Object)
[M]org.javaan.commands.FilterUtil$Matcher.accept(java.lang.Object):
[M]org.javaan.commands.FilterUtil.<init>()
[M]org.javaan.commands.FilterUtil.<init>():
[M]org.javaan.commands.FilterUtil.filter(java.util.Collection,org.javaan.commands.FilterUtil$Matcher)
[M]org.javaan.commands.FilterUtil.filter(java.util.Collection,org.javaan.commands.FilterUtil$Matcher):
[M]org.javaan.commands.ListClasses$1.<clinit>()
[M]org.javaan.commands.ListClasses$1.<clinit>():
[M]org.javaan.commands.ListClasses.<init>()
[M]org.javaan.commands.ListClasses.<init>():
[M]org.javaan.commands.ListClasses.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.ListClasses.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ListClasses.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ListClasses.getDescription():
[M]org.javaan.commands.ListClasses.getName():
[M]org.javaan.commands.ListClasses.printClasses(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClasses(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClassesAndInterfaces(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClassesAndMethods(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClassesAndSpecializations(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClassesAndSuperClasses(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListClasses.printClassesAndVirtualMethods(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListDuplicates.<init>()
[M]org.javaan.commands.ListDuplicates.<init>():
[M]org.javaan.commands.ListDuplicates.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext)
[M]org.javaan.commands.ListDuplicates.execute(org.javaan.CommandContext):
[M]org.javaan.commands.ListDuplicates.getDescription():
[M]org.javaan.commands.ListDuplicates.getName():
[M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List)
[M]org.javaan.commands.ListDuplicates.printDuplicates(java.io.Writer,java.util.List):
[M]org.javaan.commands.ListInterfaces$1.<clinit>()
[M]org.javaan.commands.ListInterfaces$1.<clinit>():
[M]org.javaan.commands.ListInterfaces.<init>()
[M]org.javaan.commands.ListInterfaces.<init>():
[M]org.javaan.commands.ListInterfaces.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.ListInterfaces.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ListInterfaces.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ListInterfaces.getDescription():
[M]org.javaan.commands.ListInterfaces.getName():
[M]org.javaan.commands.ListInterfaces.printInterfaces(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfaces(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfacesAndImplementations(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfacesAndMethods(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfacesAndSpecializations(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfacesAndSuperInterfaces(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection)
[M]org.javaan.commands.ListInterfaces.printInterfacesAndVirtualMethods(java.io.Writer,java.util.Collection):
[M]org.javaan.commands.ListMissingTypes.<init>()
[M]org.javaan.commands.ListMissingTypes.<init>():
[M]org.javaan.commands.ListMissingTypes.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ListMissingTypes.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ListMissingTypes.getDescription():
[M]org.javaan.commands.ListMissingTypes.getName():
[M]org.javaan.commands.ListPackages.<init>()
[M]org.javaan.commands.ListPackages.<init>():
[M]org.javaan.commands.ListPackages.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.ListPackages.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ListPackages.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ListPackages.getDescription():
[M]org.javaan.commands.ListPackages.getName():
[M]org.javaan.commands.MethodMatcher.<init>(java.lang.String)
[M]org.javaan.commands.MethodMatcher.<init>(java.lang.String):
[M]org.javaan.commands.MethodMatcher.accept(java.lang.Object)
[M]org.javaan.commands.MethodMatcher.accept(java.lang.Object):
[M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method)
[M]org.javaan.commands.MethodMatcher.accept(org.javaan.model.Method):
[M]org.javaan.commands.MethodMatcher.acceptAnnotationClass(org.javaan.model.Method)
[M]org.javaan.commands.MethodMatcher.acceptAnnotationClass(org.javaan.model.Method):
[M]org.javaan.commands.MethodMatcher.acceptMethodName(org.javaan.model.Method)
[M]org.javaan.commands.MethodMatcher.acceptMethodName(org.javaan.model.Method):
[M]org.javaan.commands.NameMatcher.<init>(java.lang.String)
[M]org.javaan.commands.NameMatcher.<init>(java.lang.String):
[M]org.javaan.commands.NameMatcher.accept(java.lang.Object)
[M]org.javaan.commands.NameMatcher.accept(java.lang.Object):
[M]org.javaan.commands.NameMatcher.accept(org.javaan.model.NamedObject)
[M]org.javaan.commands.NameMatcher.accept(org.javaan.model.NamedObject):
[M]org.javaan.commands.ResetOptions.<init>()
[M]org.javaan.commands.ResetOptions.<init>():
[M]org.javaan.commands.ResetOptions.getDescriptionFormat():
[M]org.javaan.commands.ResetOptions.getHelpCommandLine():
[M]org.javaan.commands.ResetOptions.getName():
[M]org.javaan.commands.ResetOptions.processOption(org.javaan.Settings,java.lang.String)
[M]org.javaan.commands.ResetOptions.processOption(org.javaan.Settings,java.lang.String):
[M]org.javaan.commands.SetOptions.<init>()
[M]org.javaan.commands.SetOptions.<init>():
[M]org.javaan.commands.SetOptions.getDescriptionFormat():
[M]org.javaan.commands.SetOptions.getHelpCommandLine():
[M]org.javaan.commands.SetOptions.getName():
[M]org.javaan.commands.SetOptions.processOption(org.javaan.Settings,java.lang.String)
[M]org.javaan.commands.SetOptions.processOption(org.javaan.Settings,java.lang.String):
[M]org.javaan.commands.ShowCalleeGraph.<init>()
[M]org.javaan.commands.ShowCalleeGraph.<init>():
[M]org.javaan.commands.ShowCalleeGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
[M]org.javaan.commands.ShowCalleeGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method):
[M]org.javaan.commands.ShowCalleeGraph.getDescription():
[M]org.javaan.commands.ShowCalleeGraph.getName():
[M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
[M]org.javaan.commands.ShowCalleeGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor):
[M]org.javaan.commands.ShowCallerGraph.<init>()
[M]org.javaan.commands.ShowCallerGraph.<init>():
[M]org.javaan.commands.ShowCallerGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method)
[M]org.javaan.commands.ShowCallerGraph.collectLeafObjects(org.javaan.model.CallGraph,org.javaan.model.Method):
[M]org.javaan.commands.ShowCallerGraph.getDescription():
[M]org.javaan.commands.ShowCallerGraph.getName():
[M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor)
[M]org.javaan.commands.ShowCallerGraph.traverse(org.javaan.model.CallGraph,org.javaan.model.Method,org.javaan.graph.GraphVisitor):
[M]org.javaan.commands.ShowDependencyCyclesGraph.<init>()
[M]org.javaan.commands.ShowDependencyCyclesGraph.<init>():
[M]org.javaan.commands.ShowDependencyCyclesGraph.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.ShowDependencyCyclesGraph.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ShowDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ShowDependencyCyclesGraph.getDescription():
[M]org.javaan.commands.ShowDependencyCyclesGraph.getName():
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.<init>()
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.<init>():
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.buildCommandLineOptions(org.apache.commons.cli.Options)
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.buildCommandLineOptions(org.apache.commons.cli.Options):
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List)
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.execute(org.javaan.CommandContext,java.util.List):
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.getDescription():
[M]org.javaan.commands.ShowPackageDependencyCyclesGraph.getName():
[M]org.javaan.commands.ShowPackageUsedGraph.<init>()
[M]org.javaan.commands.ShowPackageUsedGraph.<init>():
[M]org.javaan.commands.ShowPackageUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
[M]org.javaan.commands.ShowPackageUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set):
[M]org.javaan.commands.ShowPackageUsedGraph.getDescription():
[M]org.javaan.commands.ShowPackageUsedGraph.getName():
[M]org.javaan.commands.ShowPackageUsingGraph.<init>()
[M]org.javaan.commands.ShowPackageUsingGraph.<init>():
[M]org.javaan.commands.ShowPackageUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
[M]org.javaan.commands.ShowPackageUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set):
[M]org.javaan.commands.ShowPackageUsingGraph.getDescription():
[M]org.javaan.commands.ShowPackageUsingGraph.getName():
[M]org.javaan.commands.ShowUsedGraph.<init>()
[M]org.javaan.commands.ShowUsedGraph.<init>():
[M]org.javaan.commands.ShowUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
[M]org.javaan.commands.ShowUsedGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set):
[M]org.javaan.commands.ShowUsedGraph.getDescription():
[M]org.javaan.commands.ShowUsedGraph.getName():
[M]org.javaan.commands.ShowUsingGraph.<init>()
[M]org.javaan.commands.ShowUsingGraph.<init>():
[M]org.javaan.commands.ShowUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set)
[M]org.javaan.commands.ShowUsingGraph.getDependencyGraph(org.javaan.model.CallGraph,java.util.Set):
[M]org.javaan.commands.ShowUsingGraph.getDescription():
[M]org.javaan.commands.ShowUsingGraph.getName():
[M]org.javaan.commands.SortUtil.<init>()
[M]org.javaan.commands.SortUtil.<init>():
[M]org.javaan.commands.SortUtil.lambda$sort$0(java.util.List,java.util.List)
[M]org.javaan.commands.SortUtil.lambda$sort$0(java.util.List,java.util.List):
[M]org.javaan.commands.SortUtil.sort(java.util.Collection)
[M]org.javaan.commands.SortUtil.sort(java.util.Collection):
[M]org.javaan.commands.SortUtil.sort(java.util.List)
[M]org.javaan.commands.SortUtil.sort(java.util.List):
[M]org.javaan.commands.StandardOptions.<clinit>():
[M]org.javaan.graph.AddVerticesAutomatically.<init>(org.jgrapht.Graph)
[M]org.javaan.graph.AddVerticesAutomatically.<init>(org.jgrapht.Graph):
[M]org.javaan.graph.AddVerticesAutomatically.addEdge(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.AddVerticesAutomatically.addEdge(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.AddVerticesAutomatically.addEdge(java.lang.Object,java.lang.Object,java.lang.Object)
[M]org.javaan.graph.AddVerticesAutomatically.addEdge(java.lang.Object,java.lang.Object,java.lang.Object):
[M]org.javaan.graph.AddVerticesAutomatically.addEdges(java.lang.Object,java.util.List)
[M]org.javaan.graph.AddVerticesAutomatically.addEdges(java.lang.Object,java.util.List):
[M]org.javaan.graph.BreadthFirstTraversalListener.<clinit>()
[M]org.javaan.graph.BreadthFirstTraversalListener.<clinit>():
[M]org.javaan.graph.BreadthFirstTraversalListener.<init>(org.javaan.graph.GraphVisitor)
[M]org.javaan.graph.BreadthFirstTraversalListener.<init>(org.javaan.graph.GraphVisitor):
[M]org.javaan.graph.BreadthFirstTraversalListener.edgeTraversed(org.jgrapht.event.EdgeTraversalEvent)
[M]org.javaan.graph.BreadthFirstTraversalListener.edgeTraversed(org.jgrapht.event.EdgeTraversalEvent):
[M]org.javaan.graph.BreadthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent)
[M]org.javaan.graph.BreadthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent):
[M]org.javaan.graph.BreadthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent)
[M]org.javaan.graph.BreadthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent):
[M]org.javaan.graph.CutPoint.<init>(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.CutPoint.<init>(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.CutPoint.equals(java.lang.Object)
[M]org.javaan.graph.CutPoint.equals(java.lang.Object):
[M]org.javaan.graph.CutPoint.getSource():
[M]org.javaan.graph.CutPoint.getTarget():
[M]org.javaan.graph.CutPoint.hashCode()
[M]org.javaan.graph.CutPoint.hashCode():
[M]org.javaan.graph.CutPoint.toString():
[M]org.javaan.graph.DepthFirstTraversalListener.<init>(org.jgrapht.Graph,org.javaan.graph.GraphVisitor)
[M]org.javaan.graph.DepthFirstTraversalListener.<init>(org.jgrapht.Graph,org.javaan.graph.GraphVisitor):
[M]org.javaan.graph.DepthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent)
[M]org.javaan.graph.DepthFirstTraversalListener.vertexFinished(org.jgrapht.event.VertexTraversalEvent):
[M]org.javaan.graph.DepthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent)
[M]org.javaan.graph.DepthFirstTraversalListener.vertexTraversed(org.jgrapht.event.VertexTraversalEvent):
[M]org.javaan.graph.DirectedGraphUtils.<init>()
[M]org.javaan.graph.DirectedGraphUtils.<init>():
[M]org.javaan.graph.DirectedGraphUtils.getSourceSet(java.util.Set,org.jgrapht.Graph)
[M]org.javaan.graph.DirectedGraphUtils.getSourceSet(java.util.Set,org.jgrapht.Graph):
[M]org.javaan.graph.DirectedGraphUtils.getTargetSet(java.util.Set,org.jgrapht.Graph)
[M]org.javaan.graph.DirectedGraphUtils.getTargetSet(java.util.Set,org.jgrapht.Graph):
[M]org.javaan.graph.DirectedGraphUtils.sourceVerticesOf(java.lang.Object,org.jgrapht.Graph)
[M]org.javaan.graph.DirectedGraphUtils.sourceVerticesOf(java.lang.Object,org.jgrapht.Graph):
[M]org.javaan.graph.DirectedGraphUtils.targetVerticesOf(java.lang.Object,org.jgrapht.Graph)
[M]org.javaan.graph.DirectedGraphUtils.targetVerticesOf(java.lang.Object,org.jgrapht.Graph):
[M]org.javaan.graph.ExtendedGraph.<init>(org.jgrapht.Graph)
[M]org.javaan.graph.ExtendedGraph.<init>(org.jgrapht.Graph):
[M]org.javaan.graph.ExtendedGraph.collectLeafVertices(org.jgrapht.Graph,java.lang.Object)
[M]org.javaan.graph.ExtendedGraph.collectLeafVertices(org.jgrapht.Graph,java.lang.Object):
[M]org.javaan.graph.ExtendedGraph.collectLeaves(java.lang.Object,boolean)
[M]org.javaan.graph.ExtendedGraph.collectLeaves(java.lang.Object,boolean):
[M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean)
[M]org.javaan.graph.ExtendedGraph.createSubgraph(java.util.Set,boolean):
[M]org.javaan.graph.ExtendedGraph.getDelegate()
[M]org.javaan.graph.ExtendedGraph.getDelegate():
[M]org.javaan.graph.ExtendedGraph.getSourceSet(java.util.Set)
[M]org.javaan.graph.ExtendedGraph.getSourceSet(java.util.Set):
[M]org.javaan.graph.ExtendedGraph.getTargetSet(java.util.Set)
[M]org.javaan.graph.ExtendedGraph.getTargetSet(java.util.Set):
[M]org.javaan.graph.ExtendedGraph.predecessorsOf(java.lang.Object)
[M]org.javaan.graph.ExtendedGraph.predecessorsOf(java.lang.Object):
[M]org.javaan.graph.ExtendedGraph.sourceVerticesOf(java.lang.Object)
[M]org.javaan.graph.ExtendedGraph.sourceVerticesOf(java.lang.Object):
[M]org.javaan.graph.ExtendedGraph.successorsOf(java.lang.Object)
[M]org.javaan.graph.ExtendedGraph.successorsOf(java.lang.Object):
[M]org.javaan.graph.ExtendedGraph.targetVerticesOf(java.lang.Object)
[M]org.javaan.graph.ExtendedGraph.targetVerticesOf(java.lang.Object):
[M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
[M]org.javaan.graph.ExtendedGraph.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean):
[M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
[M]org.javaan.graph.ExtendedGraph.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean):
[M]org.javaan.graph.ExtendedGraph.traverseGraph(org.jgrapht.Graph,java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
[M]org.javaan.graph.ExtendedGraph.traverseGraph(org.jgrapht.Graph,java.lang.Object,org.javaan.graph.GraphVisitor,boolean):
[M]org.javaan.graph.GraphFactory$1.<init>(java.util.function.Supplier,java.util.function.Supplier,boolean)
[M]org.javaan.graph.GraphFactory$1.<init>(java.util.function.Supplier,java.util.function.Supplier,boolean):
[M]org.javaan.graph.GraphFactory$1.getEdgeWeight(java.lang.Object)
[M]org.javaan.graph.GraphFactory$1.getEdgeWeight(java.lang.Object):
[M]org.javaan.graph.GraphFactory$1.getEdgeWeight(org.javaan.model.Dependency)
[M]org.javaan.graph.GraphFactory$1.getEdgeWeight(org.javaan.model.Dependency):
[M]org.javaan.graph.GraphFactory.<init>()
[M]org.javaan.graph.GraphFactory.<init>():
[M]org.javaan.graph.GraphFactory.createDependencyGraph()
[M]org.javaan.graph.GraphFactory.createDependencyGraph():
[M]org.javaan.graph.GraphFactory.createSubgraphView(org.javaan.graph.ExtendedGraph,java.util.Set,boolean)
[M]org.javaan.graph.GraphFactory.createSubgraphView(org.javaan.graph.ExtendedGraph,java.util.Set,boolean):
[M]org.javaan.graph.GraphFactory.createVertexEdgeGraph(java.util.function.Supplier)
[M]org.javaan.graph.GraphFactory.createVertexEdgeGraph(java.util.function.Supplier):
[M]org.javaan.graph.GraphFactory.createVertexEdgeTree(java.util.function.Supplier)
[M]org.javaan.graph.GraphFactory.createVertexEdgeTree(java.util.function.Supplier):
[M]org.javaan.graph.GraphVisitor.finished()
[M]org.javaan.graph.GraphVisitor.finished():
[M]org.javaan.graph.GraphVisitor.vertexFinished(java.lang.Object,int)
[M]org.javaan.graph.GraphVisitor.vertexFinished(java.lang.Object,int):
[M]org.javaan.graph.GraphVisitor.visitEdge(java.lang.Object,int)
[M]org.javaan.graph.GraphVisitor.visitEdge(java.lang.Object,int):
[M]org.javaan.graph.GraphVisitor.visitGraph(org.jgrapht.Graph,int)
[M]org.javaan.graph.GraphVisitor.visitGraph(org.jgrapht.Graph,int):
[M]org.javaan.graph.GraphVisitor.visitVertex(java.lang.Object,int)
[M]org.javaan.graph.GraphVisitor.visitVertex(java.lang.Object,int):
[M]org.javaan.graph.GraphVisitorAdapter.<init>()
[M]org.javaan.graph.GraphVisitorAdapter.<init>():
[M]org.javaan.graph.GraphVisitorAdapter.finished():
[M]org.javaan.graph.GraphVisitorAdapter.vertexFinished(java.lang.Object,int):
[M]org.javaan.graph.GraphVisitorAdapter.visitEdge(java.lang.Object,int):
[M]org.javaan.graph.GraphVisitorAdapter.visitGraph(org.jgrapht.Graph,int):
[M]org.javaan.graph.GraphVisitorAdapter.visitVertex(java.lang.Object,int):
[M]org.javaan.graph.MinimumEdgesCycleCut.<init>(org.jgrapht.Graph,org.jgrapht.Graph)
[M]org.javaan.graph.MinimumEdgesCycleCut.<init>(org.jgrapht.Graph,org.jgrapht.Graph):
[M]org.javaan.graph.MinimumEdgesCycleCut.createCycleDetector()
[M]org.javaan.graph.MinimumEdgesCycleCut.createCycleDetector():
[M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles()
[M]org.javaan.graph.MinimumEdgesCycleCut.cutCycles():
[M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoint(java.util.List)
[M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoint(java.util.List):
[M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoints()
[M]org.javaan.graph.MinimumEdgesCycleCut.findCutPoints():
[M]org.javaan.graph.ParentChildMap.<init>()
[M]org.javaan.graph.ParentChildMap.<init>():
[M]org.javaan.graph.ParentChildMap.<init>(java.util.Map)
[M]org.javaan.graph.ParentChildMap.<init>(java.util.Map):
[M]org.javaan.graph.ParentChildMap.addChild(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.ParentChildMap.addChild(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.ParentChildMap.clear()
[M]org.javaan.graph.ParentChildMap.clear():
[M]org.javaan.graph.ParentChildMap.containsKey(java.lang.Object)
[M]org.javaan.graph.ParentChildMap.containsKey(java.lang.Object):
[M]org.javaan.graph.ParentChildMap.containsValue(java.lang.Object)
[M]org.javaan.graph.ParentChildMap.containsValue(java.lang.Object):
[M]org.javaan.graph.ParentChildMap.entrySet()
[M]org.javaan.graph.ParentChildMap.entrySet():
[M]org.javaan.graph.ParentChildMap.get(java.lang.Object)
[M]org.javaan.graph.ParentChildMap.get(java.lang.Object):
[M]org.javaan.graph.ParentChildMap.inverse()
[M]org.javaan.graph.ParentChildMap.inverse():
[M]org.javaan.graph.ParentChildMap.isEmpty()
[M]org.javaan.graph.ParentChildMap.isEmpty():
[M]org.javaan.graph.ParentChildMap.keySet()
[M]org.javaan.graph.ParentChildMap.keySet():
[M]org.javaan.graph.ParentChildMap.lambda$addChild$0(java.lang.Object)
[M]org.javaan.graph.ParentChildMap.lambda$addChild$0(java.lang.Object):
[M]org.javaan.graph.ParentChildMap.put(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.ParentChildMap.put(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.ParentChildMap.put(java.lang.Object,java.util.List)
[M]org.javaan.graph.ParentChildMap.put(java.lang.Object,java.util.List):
[M]org.javaan.graph.ParentChildMap.putAll(java.util.Map)
[M]org.javaan.graph.ParentChildMap.putAll(java.util.Map):
[M]org.javaan.graph.ParentChildMap.remove(java.lang.Object)
[M]org.javaan.graph.ParentChildMap.remove(java.lang.Object):
[M]org.javaan.graph.ParentChildMap.size()
[M]org.javaan.graph.ParentChildMap.size():
[M]org.javaan.graph.ParentChildMap.values()
[M]org.javaan.graph.ParentChildMap.values():
[M]org.javaan.graph.RandomEdgeSupplier.<init>(java.lang.String)
[M]org.javaan.graph.RandomEdgeSupplier.<init>(java.lang.String):
[M]org.javaan.graph.RandomEdgeSupplier.get()
[M]org.javaan.graph.RandomEdgeSupplier.get():
[M]org.javaan.graph.SimpleGraphReader$ObjectProducer.createEdge(java.lang.Object,java.lang.Object,java.lang.String)
[M]org.javaan.graph.SimpleGraphReader$ObjectProducer.createEdge(java.lang.Object,java.lang.Object,java.lang.String):
[M]org.javaan.graph.SimpleGraphReader$ObjectProducer.createVertex(java.lang.String)
[M]org.javaan.graph.SimpleGraphReader$ObjectProducer.createVertex(java.lang.String):
[M]org.javaan.graph.SimpleGraphReader.<init>(org.jgrapht.Graph,org.javaan.graph.SimpleGraphReader$ObjectProducer)
[M]org.javaan.graph.SimpleGraphReader.<init>(org.jgrapht.Graph,org.javaan.graph.SimpleGraphReader$ObjectProducer):
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String)
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String):
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String,java.lang.String)
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String,java.lang.String,java.lang.String):
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[])
[M]org.javaan.graph.SimpleGraphReader.addEdge(java.lang.String[]):
[M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String)
[M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String):
[M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String[])
[M]org.javaan.graph.SimpleGraphReader.addVertex(java.lang.String[]):
[M]org.javaan.graph.SimpleGraphReader.getEdgeMap():
[M]org.javaan.graph.SimpleGraphReader.getVertexMap():
[M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader)
[M]org.javaan.graph.SimpleGraphReader.readGraph(java.io.Reader):
[M]org.javaan.graph.SimpleGraphReader.skipComments(java.io.BufferedReader)
[M]org.javaan.graph.SimpleGraphReader.skipComments(java.io.BufferedReader):
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.<init>(int)
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.<init>(int):
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.getValue()
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.getValue():
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.subtract(int)
[M]org.javaan.graph.TopologicalMultiGraphSort$ModifiableInteger.subtract(int):
[M]org.javaan.graph.TopologicalMultiGraphSort.<init>(org.jgrapht.Graph)
[M]org.javaan.graph.TopologicalMultiGraphSort.<init>(org.jgrapht.Graph):
[M]org.javaan.graph.TopologicalMultiGraphSort.addVertexIfNotContained(java.util.List,java.lang.Object)
[M]org.javaan.graph.TopologicalMultiGraphSort.addVertexIfNotContained(java.util.List,java.lang.Object):
[M]org.javaan.graph.TopologicalMultiGraphSort.getTargetVerticesSortedByDegree(java.lang.Object)
[M]org.javaan.graph.TopologicalMultiGraphSort.getTargetVerticesSortedByDegree(java.lang.Object):
[M]org.javaan.graph.TopologicalMultiGraphSort.initializeDatastructures()
[M]org.javaan.graph.TopologicalMultiGraphSort.initializeDatastructures():
[M]org.javaan.graph.TopologicalMultiGraphSort.lambda$getTargetVerticesSortedByDegree$1(java.lang.Object,java.lang.Object,java.lang.Object)
[M]org.javaan.graph.TopologicalMultiGraphSort.lambda$getTargetVerticesSortedByDegree$1(java.lang.Object,java.lang.Object,java.lang.Object):
[M]org.javaan.graph.TopologicalMultiGraphSort.lambda$initializeDatastructures$0(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.TopologicalMultiGraphSort.lambda$initializeDatastructures$0(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.TopologicalMultiGraphSort.sort()
[M]org.javaan.graph.TopologicalMultiGraphSort.sort():
[M]org.javaan.graph.Tree.<init>(org.jgrapht.Graph)
[M]org.javaan.graph.Tree.<init>(org.jgrapht.Graph):
[M]org.javaan.graph.Tree.addEdge(java.lang.Object,java.lang.Object)
[M]org.javaan.graph.Tree.addEdge(java.lang.Object,java.lang.Object):
[M]org.javaan.graph.Tree.predecessorPathOf(java.lang.Object)
[M]org.javaan.graph.Tree.predecessorPathOf(java.lang.Object):
[M]org.javaan.graph.Tree.sourceVertexOf(java.lang.Object)
[M]org.javaan.graph.Tree.sourceVertexOf(java.lang.Object):
[M]org.javaan.jgraphx.CellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.CellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.CellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.CellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.CellStyle.getVertexLabel(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.CellStyle.getVertexLabel(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.CellStyle.getVertexStyle(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.CellStyle.getVertexStyle(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.<init>(org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.<init>(org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,org.javaan.model.Dependency)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeLabel(org.javaan.model.GraphView,org.javaan.model.Dependency):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,org.javaan.model.Dependency)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getEdgeStyle(org.javaan.model.GraphView,org.javaan.model.Dependency):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getVertexLabel(org.javaan.model.GraphView,java.lang.Object)
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getVertexLabel(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.DependencyGraphCellStyle.getVertexStyle(org.javaan.model.GraphView,java.lang.Object):
[M]org.javaan.jgraphx.MxGraphBuilder.<init>(org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle)
[M]org.javaan.jgraphx.MxGraphBuilder.<init>(org.javaan.model.GraphView,org.javaan.jgraphx.CellStyle):
[M]org.javaan.jgraphx.MxGraphBuilder.addEdges()
[M]org.javaan.jgraphx.MxGraphBuilder.addEdges():
[M]org.javaan.jgraphx.MxGraphBuilder.addVertices()
[M]org.javaan.jgraphx.MxGraphBuilder.addVertices():
[M]org.javaan.jgraphx.MxGraphBuilder.build()
[M]org.javaan.jgraphx.MxGraphBuilder.build():
[M]org.javaan.model.CallGraph$1.<clinit>()
[M]org.javaan.model.CallGraph$1.<clinit>():
[M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean)
[M]org.javaan.model.CallGraph.<init>(org.javaan.model.ClassContext,boolean,boolean):
[M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method)
[M]org.javaan.model.CallGraph.addCall(org.javaan.model.Method,org.javaan.model.Method):
[M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method)
[M]org.javaan.model.CallGraph.addCallInternal(org.javaan.model.Method,org.javaan.model.Method):
[M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method)
[M]org.javaan.model.CallGraph.addUsageOfPackage(org.javaan.model.Method,org.javaan.model.Method):
[M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method)
[M]org.javaan.model.CallGraph.addUsageOfType(org.javaan.model.Method,org.javaan.model.Method):
[M]org.javaan.model.CallGraph.createCycleDetector(org.jgrapht.Graph)
[M]org.javaan.model.CallGraph.createCycleDetector(org.jgrapht.Graph):
[M]org.javaan.model.CallGraph.getCallee(org.javaan.model.Method)
[M]org.javaan.model.CallGraph.getCallee(org.javaan.model.Method):
[M]org.javaan.model.CallGraph.getCallerOfMethodGraph():
[M]org.javaan.model.CallGraph.getCallers(org.javaan.model.Method)
[M]org.javaan.model.CallGraph.getCallers(org.javaan.model.Method):
[M]org.javaan.model.CallGraph.getDependenciesOf(org.javaan.model.Type)
[M]org.javaan.model.CallGraph.getDependenciesOf(org.javaan.model.Type):
[M]org.javaan.model.CallGraph.getDependencyCycles()
[M]org.javaan.model.CallGraph.getDependencyCycles():
[M]org.javaan.model.CallGraph.getDependencyCycles(org.jgrapht.Graph)
[M]org.javaan.model.CallGraph.getDependencyCycles(org.jgrapht.Graph):
[M]org.javaan.model.CallGraph.getLeafCallee(org.javaan.model.Method)
[M]org.javaan.model.CallGraph.getLeafCallee(org.javaan.model.Method):
[M]org.javaan.model.CallGraph.getLeafCallers(org.javaan.model.Method)
[M]org.javaan.model.CallGraph.getLeafCallers(org.javaan.model.Method):
[M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package)
[M]org.javaan.model.CallGraph.getLeafUsedPackages(org.javaan.model.Package):
[M]org.javaan.model.CallGraph.getLeafUsedTypes(org.javaan.model.Type)
[M]org.javaan.model.CallGraph.getLeafUsedTypes(org.javaan.model.Type):
[M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package)
[M]org.javaan.model.CallGraph.getLeafUsingPackages(org.javaan.model.Package):
[M]org.javaan.model.CallGraph.getLeafUsingTypes(org.javaan.model.Type)
[M]org.javaan.model.CallGraph.getLeafUsingTypes(org.javaan.model.Type):
[M]org.javaan.model.CallGraph.getPackageDependencyCycles()
[M]org.javaan.model.CallGraph.getPackageDependencyCycles():
[M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package)
[M]org.javaan.model.CallGraph.getPackageOfTypes(java.util.Set,org.javaan.model.Package):
[M]org.javaan.model.CallGraph.getTopologicalSortedPackages()
[M]org.javaan.model.CallGraph.getTopologicalSortedPackages():
[M]org.javaan.model.CallGraph.getUsageOfPackageGraph()
[M]org.javaan.model.CallGraph.getUsageOfPackageGraph():
[M]org.javaan.model.CallGraph.getUsageOfTypeGraph()
[M]org.javaan.model.CallGraph.getUsageOfTypeGraph():
[M]org.javaan.model.CallGraph.size()
[M]org.javaan.model.CallGraph.size():
[M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseCallee(org.javaan.model.Method,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseCallers(org.javaan.model.Method,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph)
[M]org.javaan.model.CallGraph.traverseDependencyCycles(org.javaan.graph.GraphVisitor,org.jgrapht.Graph):
[M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traversePackageDependencyCycles(org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseUsedPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseUsedTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseUsingPackages(org.javaan.model.Package,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor)
[M]org.javaan.model.CallGraph.traverseUsingTypes(org.javaan.model.Type,org.javaan.graph.GraphVisitor):
[M]org.javaan.model.ClassContext$1.<clinit>()
[M]org.javaan.model.ClassContext$1.<clinit>():
[M]org.javaan.model.ClassContext.<init>()
[M]org.javaan.model.ClassContext.<init>():
[M]org.javaan.model.ClassContext.<init>(org.javaan.model.ClassContextInternals)
[M]org.javaan.model.ClassContext.<init>(org.javaan.model.ClassContextInternals):
[M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.addClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.addInterface(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.addInterfaceOfClass(org.javaan.model.Clazz,org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.addInterfaceOfClass(org.javaan.model.Clazz,org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method)
[M]org.javaan.model.ClassContext.addMethod(org.javaan.model.Method):
[M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.addSuperClass(org.javaan.model.Clazz,org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.addSuperInterface(org.javaan.model.Interface,org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.addSuperInterface(org.javaan.model.Interface,org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.addType(org.javaan.model.Type)
[M]org.javaan.model.ClassContext.addType(org.javaan.model.Type):
[M]org.javaan.model.ClassContext.contains(java.lang.String)
[M]org.javaan.model.ClassContext.contains(java.lang.String):
[M]org.javaan.model.ClassContext.containsClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.containsClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.containsInterface(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.containsInterface(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.findMethod(java.util.List,java.lang.String)
[M]org.javaan.model.ClassContext.findMethod(java.util.List,java.lang.String):
[M]org.javaan.model.ClassContext.get(java.lang.String)
[M]org.javaan.model.ClassContext.get(java.lang.String):
[M]org.javaan.model.ClassContext.getClasses()
[M]org.javaan.model.ClassContext.getClasses():
[M]org.javaan.model.ClassContext.getClassesOfPackage(org.javaan.model.Package)
[M]org.javaan.model.ClassContext.getClassesOfPackage(org.javaan.model.Package):
[M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getDirectInterfacesOfClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getDirectSpecializationsOfClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getDirectSpecializationsOfClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.getImplementations(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.getInterfaces()
[M]org.javaan.model.ClassContext.getInterfaces():
[M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getInterfacesOfClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getInterfacesOfPackage(org.javaan.model.Package)
[M]org.javaan.model.ClassContext.getInterfacesOfPackage(org.javaan.model.Package):
[M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String)
[M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Clazz,java.lang.String):
[M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String)
[M]org.javaan.model.ClassContext.getMethod(org.javaan.model.Interface,java.lang.String):
[M]org.javaan.model.ClassContext.getMethods()
[M]org.javaan.model.ClassContext.getMethods():
[M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.getMethods(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.getMethodsOfClasses()
[M]org.javaan.model.ClassContext.getMethodsOfClasses():
[M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type)
[M]org.javaan.model.ClassContext.getPackageOfType(org.javaan.model.Type):
[M]org.javaan.model.ClassContext.getPackages()
[M]org.javaan.model.ClassContext.getPackages():
[M]org.javaan.model.ClassContext.getSpecializationOfInterface(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.getSpecializationOfInterface(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.getSpecializationsOfClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getSpecializationsOfClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getSuperClass(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getSuperClass(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getSuperClassGraph():
[M]org.javaan.model.ClassContext.getSuperClassHierarchy(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getSuperClassHierarchy(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getSuperInterfaceGraph():
[M]org.javaan.model.ClassContext.getSuperInterfaces(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.getSuperInterfaces(org.javaan.model.Interface):
[M]org.javaan.model.ClassContext.getTypesOfPackage(org.javaan.model.Package)
[M]org.javaan.model.ClassContext.getTypesOfPackage(org.javaan.model.Package):
[M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String)
[M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Clazz,java.lang.String):
[M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String)
[M]org.javaan.model.ClassContext.getVirtualMethod(org.javaan.model.Interface,java.lang.String):
[M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz)
[M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Clazz):
[M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface)
[M]org.javaan.model.ClassContext.getVirtualMethods(org.javaan.model.Interface):
[M]org.javaan.model.ClassContextInternals.<init>()
[M]org.javaan.model.ClassContextInternals.<init>():
[M]org.javaan.model.Clazz.<init>(java.lang.Class)
[M]org.javaan.model.Clazz.<init>(java.lang.Class):
[M]org.javaan.model.Clazz.<init>(java.lang.String)
[M]org.javaan.model.Clazz.<init>(java.lang.String):
[M]org.javaan.model.Clazz.<init>(java.lang.String,java.lang.String,java.util.List)
[M]org.javaan.model.Clazz.<init>(java.lang.String,java.lang.String,java.util.List):
[M]org.javaan.model.Clazz.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
[M]org.javaan.model.Clazz.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String):
[M]org.javaan.model.Clazz.getInterfaceNames()
[M]org.javaan.model.Clazz.getInterfaceNames():
[M]org.javaan.model.Clazz.getJavaType():
[M]org.javaan.model.Clazz.getSuperTypeName()
[M]org.javaan.model.Clazz.getSuperTypeName():
[M]org.javaan.model.Clazz.lambda$new$0(java.lang.Class)
[M]org.javaan.model.Clazz.lambda$new$0(java.lang.Class):
[M]org.javaan.model.DeclaringResolver.<init>()
[M]org.javaan.model.DeclaringResolver.<init>():
[M]org.javaan.model.DeclaringResolver.resolve(org.javaan.model.Method)
[M]org.javaan.model.DeclaringResolver.resolve(org.javaan.model.Method):
[M]org.javaan.model.Dependency.<init>(org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
[M]org.javaan.model.Dependency.<init>(org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method):
[M]org.javaan.model.Dependency.addCallee(org.javaan.model.Method)
[M]org.javaan.model.Dependency.addCallee(org.javaan.model.Method):
[M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method)
[M]org.javaan.model.Dependency.addDependency(org.jgrapht.Graph,org.javaan.model.NamedObject,org.javaan.model.NamedObject,org.javaan.model.Method):
[M]org.javaan.model.Dependency.createName(org.javaan.model.NamedObject,org.javaan.model.NamedObject)
[M]org.javaan.model.Dependency.createName(org.javaan.model.NamedObject,org.javaan.model.NamedObject):
[M]org.javaan.model.Dependency.getCallee()
[M]org.javaan.model.Dependency.getCallee():
[M]org.javaan.model.Dependency.getSource():
[M]org.javaan.model.Dependency.getTarget():
[M]org.javaan.model.DuplicatesFinder.<init>(java.util.List)
[M]org.javaan.model.DuplicatesFinder.<init>(java.util.List):
[M]org.javaan.model.DuplicatesFinder.createUniqueSet()
[M]org.javaan.model.DuplicatesFinder.createUniqueSet():
[M]org.javaan.model.DuplicatesFinder.find()
[M]org.javaan.model.DuplicatesFinder.find():
[M]org.javaan.model.DuplicatesFinder.hasDuplicates()
[M]org.javaan.model.DuplicatesFinder.hasDuplicates():
[M]org.javaan.model.GraphView.collectLeaves(java.lang.Object,boolean)
[M]org.javaan.model.GraphView.collectLeaves(java.lang.Object,boolean):
[M]org.javaan.model.GraphView.createSubgraph(java.util.Set,boolean)
[M]org.javaan.model.GraphView.createSubgraph(java.util.Set,boolean):
[M]org.javaan.model.GraphView.edgeSet()
[M]org.javaan.model.GraphView.edgeSet():
[M]org.javaan.model.GraphView.getEdge(java.lang.Object,java.lang.Object):
[M]org.javaan.model.GraphView.getEdgeSource(java.lang.Object)
[M]org.javaan.model.GraphView.getEdgeSource(java.lang.Object):
[M]org.javaan.model.GraphView.getEdgeTarget(java.lang.Object)
[M]org.javaan.model.GraphView.getEdgeTarget(java.lang.Object):
[M]org.javaan.model.GraphView.getEdgeWeight(java.lang.Object)
[M]org.javaan.model.GraphView.getEdgeWeight(java.lang.Object):
[M]org.javaan.model.GraphView.incomingEdgesOf(java.lang.Object):
[M]org.javaan.model.GraphView.outgoingEdgesOf(java.lang.Object):
[M]org.javaan.model.GraphView.predecessorsOf(java.lang.Object):
[M]org.javaan.model.GraphView.sourceVerticesOf(java.lang.Object):
[M]org.javaan.model.GraphView.successorsOf(java.lang.Object):
[M]org.javaan.model.GraphView.targetVerticesOf(java.lang.Object):
[M]org.javaan.model.GraphView.traverseBreadthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean):
[M]org.javaan.model.GraphView.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean)
[M]org.javaan.model.GraphView.traverseDepthFirst(java.lang.Object,org.javaan.graph.GraphVisitor,boolean):
[M]org.javaan.model.GraphView.vertexSet()
[M]org.javaan.model.GraphView.vertexSet():
[M]org.javaan.model.ImplementationResolver$1.<clinit>()
[M]org.javaan.model.ImplementationResolver$1.<clinit>():
[M]org.javaan.model.ImplementationResolver.<init>(org.javaan.model.ClassContext)
[M]org.javaan.model.ImplementationResolver.<init>(org.javaan.model.ClassContext):
[M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method)
[M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Clazz,org.javaan.model.Method):
[M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface)
[M]org.javaan.model.ImplementationResolver.findImplementations(org.javaan.model.Interface):
[M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method)
[M]org.javaan.model.ImplementationResolver.resolve(org.javaan.model.Method):
[M]org.javaan.model.Interface.<init>(java.lang.Class)
[M]org.javaan.model.Interface.<init>(java.lang.Class):
[M]org.javaan.model.Interface.<init>(java.lang.String)
[M]org.javaan.model.Interface.<init>(java.lang.String):
[M]org.javaan.model.Interface.<init>(java.lang.String,java.util.List)
[M]org.javaan.model.Interface.<init>(java.lang.String,java.util.List):
[M]org.javaan.model.Interface.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
[M]org.javaan.model.Interface.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String):
[M]org.javaan.model.Interface.getJavaType():
[M]org.javaan.model.Interface.getSuperInterfaceNames()
[M]org.javaan.model.Interface.getSuperInterfaceNames():
[M]org.javaan.model.Interface.lambda$new$0(java.lang.Class)
[M]org.javaan.model.Interface.lambda$new$0(java.lang.Class):
[M]org.javaan.model.InterfaceMethodFinder.<init>(org.javaan.model.ClassContext,java.lang.String)
[M]org.javaan.model.InterfaceMethodFinder.<init>(org.javaan.model.ClassContext,java.lang.String):
[M]org.javaan.model.InterfaceMethodFinder.finished():
[M]org.javaan.model.InterfaceMethodFinder.getMethodFound()
[M]org.javaan.model.InterfaceMethodFinder.getMethodFound():
[M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int)
[M]org.javaan.model.InterfaceMethodFinder.visitVertex(java.lang.Object,int):
[M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int)
[M]org.javaan.model.InterfaceMethodFinder.visitVertex(org.javaan.model.Interface,int):
[M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List)
[M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List):
[M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List,org.apache.bcel.classfile.Method)
[M]org.javaan.model.Method.<init>(java.lang.String,org.javaan.model.Type,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List,java.util.List,org.apache.bcel.classfile.Method):
[M]org.javaan.model.Method.<init>(org.javaan.model.Type,java.lang.String)
[M]org.javaan.model.Method.<init>(org.javaan.model.Type,java.lang.String):
[M]org.javaan.model.Method.buildUniqueMethodName(org.javaan.model.Type,java.lang.String)
[M]org.javaan.model.Method.buildUniqueMethodName(org.javaan.model.Type,java.lang.String):
[M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor)
[M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Constructor):
[M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method)
[M]org.javaan.model.Method.create(org.javaan.model.Type,java.lang.reflect.Method):
[M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method)
[M]org.javaan.model.Method.create(org.javaan.model.Type,org.apache.bcel.classfile.Method):
[M]org.javaan.model.Method.createMethodGen()
[M]org.javaan.model.Method.createMethodGen():
[M]org.javaan.model.Method.getAnnotationTypes()
[M]org.javaan.model.Method.getAnnotationTypes():
[M]org.javaan.model.Method.getMethodName()
[M]org.javaan.model.Method.getMethodName():
[M]org.javaan.model.Method.getParameterTypes()
[M]org.javaan.model.Method.getParameterTypes():
[M]org.javaan.model.Method.getReturnType():
[M]org.javaan.model.Method.getSignature()
[M]org.javaan.model.Method.getSignature():
[M]org.javaan.model.Method.getType()
[M]org.javaan.model.Method.getType():
[M]org.javaan.model.Method.isAbstract()
[M]org.javaan.model.Method.isAbstract():
[M]org.javaan.model.MethodResolver.resolve(org.javaan.model.Method)
[M]org.javaan.model.MethodResolver.resolve(org.javaan.model.Method):
[M]org.javaan.model.NamedObject.getName()
[M]org.javaan.model.NamedObject.getName():
[M]org.javaan.model.NamedObjectBase.<init>(java.lang.String)
[M]org.javaan.model.NamedObjectBase.<init>(java.lang.String):
[M]org.javaan.model.NamedObjectBase.compareTo(java.lang.Object)
[M]org.javaan.model.NamedObjectBase.compareTo(java.lang.Object):
[M]org.javaan.model.NamedObjectBase.compareTo(org.javaan.model.NamedObject)
[M]org.javaan.model.NamedObjectBase.compareTo(org.javaan.model.NamedObject):
[M]org.javaan.model.NamedObjectBase.equals(java.lang.Object)
[M]org.javaan.model.NamedObjectBase.equals(java.lang.Object):
[M]org.javaan.model.NamedObjectBase.getName()
[M]org.javaan.model.NamedObjectBase.getName():
[M]org.javaan.model.NamedObjectBase.hashCode()
[M]org.javaan.model.NamedObjectBase.hashCode():
[M]org.javaan.model.NamedObjectBase.toString():
[M]org.javaan.model.NamedObjectMap.<init>()
[M]org.javaan.model.NamedObjectMap.<init>():
[M]org.javaan.model.NamedObjectMap.<init>(java.util.Collection)
[M]org.javaan.model.NamedObjectMap.<init>(java.util.Collection):
[M]org.javaan.model.NamedObjectMap.add(org.javaan.model.NamedObject)
[M]org.javaan.model.NamedObjectMap.add(org.javaan.model.NamedObject):
[M]org.javaan.model.NamedObjectMap.addAll(java.util.Collection)
[M]org.javaan.model.NamedObjectMap.addAll(java.util.Collection):
[M]org.javaan.model.NamedObjectMap.contains(java.lang.String)
[M]org.javaan.model.NamedObjectMap.contains(java.lang.String):
[M]org.javaan.model.NamedObjectMap.get(java.lang.String)
[M]org.javaan.model.NamedObjectMap.get(java.lang.String):
[M]org.javaan.model.NamedObjectMap.getNamedObjects()
[M]org.javaan.model.NamedObjectMap.getNamedObjects():
[M]org.javaan.model.NamedObjectRepository.contains(java.lang.String):
[M]org.javaan.model.NamedObjectRepository.get(java.lang.String):
[M]org.javaan.model.Package.<init>(java.lang.String)
[M]org.javaan.model.Package.<init>(java.lang.String):
[M]org.javaan.model.Package.<init>(org.javaan.model.Type)
[M]org.javaan.model.Package.<init>(org.javaan.model.Type):
[M]org.javaan.model.Package.getPackageNameOfType(org.javaan.model.Type)
[M]org.javaan.model.Package.getPackageNameOfType(org.javaan.model.Type):
[M]org.javaan.model.TreeView.predecessorPathOf(java.lang.Object):
[M]org.javaan.model.TreeView.sourceVertexOf(java.lang.Object):
[M]org.javaan.model.Type$JavaType.<clinit>()
[M]org.javaan.model.Type$JavaType.<clinit>():
[M]org.javaan.model.Type$JavaType.<init>(java.lang.String,int)
[M]org.javaan.model.Type$JavaType.<init>(java.lang.String,int):
[M]org.javaan.model.Type$JavaType.valueOf(java.lang.String)
[M]org.javaan.model.Type$JavaType.valueOf(java.lang.String):
[M]org.javaan.model.Type$JavaType.values()
[M]org.javaan.model.Type$JavaType.values():
[M]org.javaan.model.Type.<init>(java.lang.Class)
[M]org.javaan.model.Type.<init>(java.lang.Class):
[M]org.javaan.model.Type.<init>(java.lang.String)
[M]org.javaan.model.Type.<init>(java.lang.String):
[M]org.javaan.model.Type.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String)
[M]org.javaan.model.Type.<init>(org.apache.bcel.classfile.JavaClass,java.lang.String):
[M]org.javaan.model.Type.create(java.lang.String)
[M]org.javaan.model.Type.create(java.lang.String):
[M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String)
[M]org.javaan.model.Type.create(org.apache.bcel.classfile.JavaClass,java.lang.String):
[M]org.javaan.model.Type.getConstantPoolGen()
[M]org.javaan.model.Type.getConstantPoolGen():
[M]org.javaan.model.Type.getFilePath()
[M]org.javaan.model.Type.getFilePath():
[M]org.javaan.model.Type.getJavaClass()
[M]org.javaan.model.Type.getJavaClass():
[M]org.javaan.model.Type.getJavaType()
[M]org.javaan.model.Type.getJavaType():
[M]org.javaan.model.Type.getReflectionClass()
[M]org.javaan.model.Type.getReflectionClass():
[M]org.javaan.model.Type.getShortName()
[M]org.javaan.model.Type.getShortName():
[M]org.javaan.model.Type.getShortName(java.lang.String)
[M]org.javaan.model.Type.getShortName(java.lang.String):
[M]org.javaan.model.Type.isReflection()
[M]org.javaan.model.Type.isReflection():
[M]org.javaan.model.Type.toClazz()
[M]org.javaan.model.Type.toClazz():
[M]org.javaan.model.Type.toInterface()
[M]org.javaan.model.Type.toInterface():
[M]org.javaan.print.ClazzFormatter.<init>()
[M]org.javaan.print.ClazzFormatter.<init>():
[M]org.javaan.print.ClazzFormatter.format(java.lang.Object)
[M]org.javaan.print.ClazzFormatter.format(java.lang.Object):
[M]org.javaan.print.ClazzFormatter.format(org.javaan.model.Clazz)
[M]org.javaan.print.ClazzFormatter.format(org.javaan.model.Clazz):
[M]org.javaan.print.ConsoleDependencyFormatter.<init>()
[M]org.javaan.print.ConsoleDependencyFormatter.<init>():
[M]org.javaan.print.ConsoleDependencyFormatter.format(java.lang.Object)
[M]org.javaan.print.ConsoleDependencyFormatter.format(java.lang.Object):
[M]org.javaan.print.ConsoleDependencyFormatter.format(org.javaan.model.Dependency)
[M]org.javaan.print.ConsoleDependencyFormatter.format(org.javaan.model.Dependency):
[M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
[M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter):
[M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter,java.lang.String)
[M]org.javaan.print.GraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter,java.lang.String):
[M]org.javaan.print.GraphPrinter.visitEdge(java.lang.Object,int)
[M]org.javaan.print.GraphPrinter.visitEdge(java.lang.Object,int):
[M]org.javaan.print.GraphPrinter.visitGraph(org.jgrapht.Graph,int)
[M]org.javaan.print.GraphPrinter.visitGraph(org.jgrapht.Graph,int):
[M]org.javaan.print.GraphPrinter.visitVertex(java.lang.Object,int)
[M]org.javaan.print.GraphPrinter.visitVertex(java.lang.Object,int):
[M]org.javaan.print.InterfaceFormatter.<init>()
[M]org.javaan.print.InterfaceFormatter.<init>():
[M]org.javaan.print.InterfaceFormatter.format(java.lang.Object)
[M]org.javaan.print.InterfaceFormatter.format(java.lang.Object):
[M]org.javaan.print.InterfaceFormatter.format(org.javaan.model.Interface)
[M]org.javaan.print.InterfaceFormatter.format(org.javaan.model.Interface):
[M]org.javaan.print.MethodFormatter.<init>()
[M]org.javaan.print.MethodFormatter.<init>():
[M]org.javaan.print.MethodFormatter.format(java.lang.Object)
[M]org.javaan.print.MethodFormatter.format(java.lang.Object):
[M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method)
[M]org.javaan.print.MethodFormatter.format(org.javaan.model.Method):
[M]org.javaan.print.MethodListDependencyFormatter.<init>(int)
[M]org.javaan.print.MethodListDependencyFormatter.<init>(int):
[M]org.javaan.print.MethodListDependencyFormatter.format(java.lang.Object)
[M]org.javaan.print.MethodListDependencyFormatter.format(java.lang.Object):
[M]org.javaan.print.MethodListDependencyFormatter.format(org.javaan.model.Dependency)
[M]org.javaan.print.MethodListDependencyFormatter.format(org.javaan.model.Dependency):
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.<init>()
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.<init>():
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(java.lang.Object)
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(java.lang.Object):
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(org.javaan.model.Dependency)
[M]org.javaan.print.NumberOfMethodsDependencyFormatter.format(org.javaan.model.Dependency):
[M]org.javaan.print.ObjectFormatter.format(java.lang.Object)
[M]org.javaan.print.ObjectFormatter.format(java.lang.Object):
[M]org.javaan.print.PackageFormatter.<init>()
[M]org.javaan.print.PackageFormatter.<init>():
[M]org.javaan.print.PackageFormatter.format(java.lang.Object)
[M]org.javaan.print.PackageFormatter.format(java.lang.Object):
[M]org.javaan.print.PackageFormatter.format(org.javaan.model.Package)
[M]org.javaan.print.PackageFormatter.format(org.javaan.model.Package):
[M]org.javaan.print.PrintUtil.<clinit>()
[M]org.javaan.print.PrintUtil.<clinit>():
[M]org.javaan.print.PrintUtil.<init>()
[M]org.javaan.print.PrintUtil.<init>():
[M]org.javaan.print.PrintUtil.createArgumentList(java.util.List)
[M]org.javaan.print.PrintUtil.createArgumentList(java.util.List):
[M]org.javaan.print.PrintUtil.format(java.io.Writer,java.lang.String,java.lang.Object[])
[M]org.javaan.print.PrintUtil.format(java.io.Writer,java.lang.String,java.lang.Object[]):
[M]org.javaan.print.PrintUtil.indent(java.io.Writer,org.javaan.print.ObjectFormatter,java.lang.Object,int)
[M]org.javaan.print.PrintUtil.indent(java.io.Writer,org.javaan.print.ObjectFormatter,java.lang.Object,int):
[M]org.javaan.print.PrintUtil.print(java.io.Writer,java.lang.String)
[M]org.javaan.print.PrintUtil.print(java.io.Writer,java.lang.String):
[M]org.javaan.print.PrintUtil.printSeparator(java.io.Writer)
[M]org.javaan.print.PrintUtil.printSeparator(java.io.Writer):
[M]org.javaan.print.PrintUtil.println(java.io.Writer)
[M]org.javaan.print.PrintUtil.println(java.io.Writer):
[M]org.javaan.print.PrintUtil.println(java.io.Writer,java.lang.String)
[M]org.javaan.print.PrintUtil.println(java.io.Writer,java.lang.String):
[M]org.javaan.print.PrintUtil.println(java.io.Writer,java.util.Collection,java.lang.String,java.lang.String,java.lang.String)
[M]org.javaan.print.PrintUtil.println(java.io.Writer,java.util.Collection,java.lang.String,java.lang.String,java.lang.String):
[M]org.javaan.print.PrintUtil.println(java.io.Writer,org.javaan.print.ObjectFormatter,java.util.Collection,java.lang.String,java.lang.String,java.lang.String)
[M]org.javaan.print.PrintUtil.println(java.io.Writer,org.javaan.print.ObjectFormatter,java.util.Collection,java.lang.String,java.lang.String,java.lang.String):
[M]org.javaan.print.TypeFormatter$1.<clinit>()
[M]org.javaan.print.TypeFormatter$1.<clinit>():
[M]org.javaan.print.TypeFormatter.<init>()
[M]org.javaan.print.TypeFormatter.<init>():
[M]org.javaan.print.TypeFormatter.<init>(org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter)
[M]org.javaan.print.TypeFormatter.<init>(org.javaan.print.ObjectFormatter,org.javaan.print.ObjectFormatter):
[M]org.javaan.print.TypeFormatter.format(java.lang.Object)
[M]org.javaan.print.TypeFormatter.format(java.lang.Object):
[M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type)
[M]org.javaan.print.TypeFormatter.format(org.javaan.model.Type):
[M]org.javaan.print.TypeInformationFormatter.<init>()
[M]org.javaan.print.TypeInformationFormatter.<init>():
[M]org.javaan.print.TypeInformationFormatter.format(java.lang.Object)
[M]org.javaan.print.TypeInformationFormatter.format(java.lang.Object):
[M]org.javaan.print.TypeInformationFormatter.format(org.javaan.model.Type)
[M]org.javaan.print.TypeInformationFormatter.format(org.javaan.model.Type):
[M]org.javaan.print.VertexEdgeGraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter)
[M]org.javaan.print.VertexEdgeGraphPrinter.<init>(java.io.Writer,org.javaan.print.ObjectFormatter):
[M]org.javaan.print.VertexEdgeGraphPrinter.visitVertex(java.lang.Object,int)
[M]org.javaan.print.VertexEdgeGraphPrinter.visitVertex(java.lang.Object,int):